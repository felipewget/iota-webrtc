{"version":3,"sources":["utils/constants.js","utils/index.js","components/shared/PasswordTextField.jsx","components/shared/PlainTextField.jsx","components/shared/Snackbar.jsx","store.js","components/Login/index.jsx","components/Chatroom/Communication.js","components/Chatroom/Peer.jsx","components/Chatroom/index.jsx","components/Signup/index.jsx","components/Home/index.jsx","components/ChatGUI/index.jsx","components/Auth/RedirectIfLoggedIn.jsx","components/Auth/RequireAuth.jsx","components/App/index.jsx","index.jsx"],"names":["TRYTES_CHARSET_REGEX","SEED_LENGTH","TAG_LENGTH","MAX_DEPTH","DEFAULT_INTERVAL","TangleNet","SPAM_NET","URL","MWM","DEV_NET1","DEV_NET2","Routes","Color","generateTrytes","maxLength","seed","window","crypto","getRandomValues","console","error","length","B64ToArrBuff","encode","Uint32Array","replace","substring","getCurrentTimestamp","Math","floor","Date","getTime","getUserHash","username","password","CryptoJS","SHA1","toString","getUserMedia","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","constraints","wrap","_context","prev","next","navigator","mediaDevices","abrupt","Error","stop","_x","apply","this","arguments","extractData","bundle","data","dataJSON","result","JSON","parse","extractJson","err","log","parseJsonFromBundle","LZUTF8","decompress","inputEncoding","prepareData","tag","compressedData","compress","outputEncoding","compressData","stringify","message","asciiToTrytes","address","value","PasswordTextField","setShowPassword","setPassword","showPassword","react_default","createElement","TextField","variant","margin","required","fullWidth","name","label","type","id","onChange","e","target","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","onClick","prevState","VisibilityOff_default","Visibility_default","PlainTextField","setValue","toLowerCase","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","other","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","key","color","Close_default","useStyles2","CustomizedSnackbars","open","autoHideDuration","Snackbar","anchorOrigin","vertical","horizontal","event","reason","initialState","userHash","loggedIn","myId","tangleNet","iceServers","urls","accountData","monitoringInterval","myAccount","provider","myBalance","DBContext","React","createContext","useStyles","@global","body","common","white","paper","marginTop","flexDirection","avatar","form","width","submit","Login","login","history","db","useContext","_useGlobal","useGlobal","setSeed","slicedToArray","_useGlobal3","setLoggedIn","_useGlobal5","setUsername","_useGlobal7","setMyId","_useState","useState","_useState2","snackbarVariant","setSnackbarVariant","_useState3","_useState4","snackbarMessage","setSnackbarMessage","_useState5","_useState6","snackbarOpen","setSnackbarOpen","_useState7","_useState8","seedInput","setSeedInput","_useState9","_useState10","passwordInput","setPasswordInput","_useState11","_useState12","usernameInput","setUsernameInput","_useState13","_useState14","showPasswordInput","setShowPasswordInput","_useState15","_useState16","loginWithSeed","setLoginWithSeed","userCollection","getCollection","user","findOne","userData","localStorage","setItem","getGlobal","build_default","Container","component","maxWidth","Avatar","LockOutlined_default","Typography","concat","shared_PlainTextField","Fragment","shared_PasswordTextField","Button","Grid","container","item","xs","push","Communication","_this","roomId","minWeight","interval","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","WEBRTCSIGNAL","REQUEST","DONATE_OFFER","DONATE_ACCEPT","CHAT_MESSAGE","oldTransactions","peerList","stopRefreshingAccount","clearInterval","accountInterval","startMonitoring","constraint","video","audio","stream","sent","currentTimestamp","broadcastRequest","isMonitoring","monitorRequest","_callee2","transactions","bundles","signals","_context2","getNewTransactions","getBundles","getSignals","processSignals","setTimeout","monitorInterval","t0","sendDonationOffer","peerId","sendMessage","request","myUsername","broadcastTransaction","API","prepareTransfers","then","trytes","sendTrytes","_callee3","searchValues","_context3","tags","findTransactionObjects","filter","transaction","timestamp","bundleMap","bundleList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","return","map","sort","b","currentIndex","reduce","extractedSignal","startOffering","_ref5","_assertThisInitialize","assertThisInitialized","config","peer","createPeer","initiator","attachEventHandlers","startAnswering","_assertThisInitialize2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","signalData","signal","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","Peer","trickle","sendAllSignals","debounce","_ref7","signalQueue","identity","on","emit","objectSpread","_ref8","_callee4","response","transfers","_context4","getNewAddress","security","send","catch","srcObject","track","destroy","stopStreaming","trackList","getTracks","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","stopMonitoring","endMonitoring","_i","_Object$keys","keys","uuidv4","composeAPI","getAccountData","res","setInterval","connected","_i2","_Object$keys2","Events","memo","autoPlay","ref","setPeerVideoRef","height","kind","srcLang","Chatroom","match","params","_useGlobal9","peers","setPeers","streams","setStreams","peerCounter","setPeerCounter","communication","setCommunication","setMyBalance","useEffect","toConsumableArray","peerStream","account","_ref2","balance","refreshAccount","onbeforeunload","genTryte","marginBottom","seedGen","Signup","setseed","openSnackbar","noValidate","existingUser","existingSeed","isTrytes","insert","justify","Account","setRoomId","faucetAddr","setFaucetAddr","latestAddress","href","rel","newRoomId","removeItem","setGlobal","style","borderRadius","boxShadow","Spinner","react_epic_spinners_umd_min","size","RedirectIfLoggedIn","Component","withRouter","react_router","to","RequireAuth","App","Helmet","content","charSet","exact","path","Home","ChatGUI","getItem","adapter","LokiIDBAdapter","loki","Loki","autoload","autosave","autosaveInterval","autoloadCallback","addCollection","iota","Iota","MOUNT_NODE","document","getElementById","ReactDOM","render","react_router_dom","CssBaseline","Provider","components_App"],"mappings":"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","file":"static/js/main.7006802a.chunk.js","sourcesContent":["/**\n * Iota constants\n */\nexport const TRYTES_CHARSET_REGEX = /[^A-Z9]+/g;\nexport const SEED_LENGTH = 81;\nexport const TAG_LENGTH = 27;\nexport const MAX_DEPTH = 4;\nexport const DEFAULT_INTERVAL = 3000;\nexport const ICE_SERVERS = [{\n  urls: 'stun:global.stun.twilio.com:3478?transport=udp',\n}, {\n  urls: 'stun:stun1.l.google.com:19302',\n}, {\n  urls: 'stun:stun2.l.google.com:19302',\n}, {\n  urls: 'stun:stun.l.google.com:19302',\n}, {\n  urls: 'stun:stun.vodafone.ro:3478',\n}, {\n  urls: 'stun:stun.xs4all.nl:3478',\n}];\n\nexport const TangleNet = {\n  SPAM_NET: {\n    URL: 'https://nodes.spamnet.iota.org:443',\n    MWM: 7,\n  },\n  DEV_NET1: {\n    URL: 'https://nodes.devnet.iota.org:443',\n    MWM: 9,\n  },\n  DEV_NET2: {\n    URL: 'https://nodes.devnet.thetangle.org:443',\n    MWM: 9,\n  },\n};\n\nexport const Routes = {\n  HOME: '/',\n  SIGNUP: '/signup',\n  LOGIN: '/login',\n  CHATROOM: '/chatroom/:roomId',\n  CHATGUI: '/chatgui',\n};\n\nexport const Color = {\n  PRIMARY: '#33B3A6',\n  BACKGROUND: '#607D8B',\n};\n","import CryptoJS from 'crypto-js';\nimport B64ToArrBuff from 'base64-arraybuffer';\nimport LZUTF8 from 'lzutf8';\nimport { extractJson } from '@iota/extract-json';\nimport { asciiToTrytes } from '@iota/converter';\nimport { TRYTES_CHARSET_REGEX, SEED_LENGTH } from './constants';\n\nexport function generateTrytes(maxLength) {\n  let seed = '';\n  if (window && window.crypto && window.crypto.getRandomValues) {\n    while (seed.length < maxLength) {\n      seed += B64ToArrBuff\n        .encode(window.crypto.getRandomValues(new Uint32Array(maxLength)))\n        .replace(TRYTES_CHARSET_REGEX, '');\n    }\n  } else {\n    return console.error('No native crypto random available');\n  }\n  return seed.substring(0, maxLength);\n}\n\nfunction compressData(data) {\n  return LZUTF8.compress(data, { outputEncoding: 'Base64' });\n}\n\nfunction decompressData(data) {\n  return LZUTF8.decompress(data, { inputEncoding: 'Base64' });\n}\n\nexport function parseJsonFromBundle(bundle) {\n  let result;\n  try {\n    result = JSON.parse(extractJson(bundle));\n  } catch (err) {\n    console.log(err);\n    console.log(bundle);\n  }\n  return result;\n}\n\nexport const getCurrentTimestamp = () => Math.floor(new Date().getTime() / 1000);\n\nexport const getUserHash = (username, password) => {\n  const hash = CryptoJS.SHA1(username + password);\n  return hash.toString();\n};\n\nexport const getUserMedia = async (constraints) => {\n  if (navigator\n    && navigator.mediaDevices\n    && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  return new Error('User Media Not Supported!');\n};\n\nexport const extractData = (bundle) => {\n  const dataJSON = parseJsonFromBundle(bundle);\n  return JSON.parse(decompressData(dataJSON));\n};\n\nexport const prepareData = (data, tag) => {\n  const compressedData = compressData(JSON.stringify(data));\n  const message = asciiToTrytes(JSON.stringify(compressedData));\n  return [{\n    address: generateTrytes(SEED_LENGTH),\n    tag,\n    value: 0,\n    message,\n  }];\n};\n","import React from 'react';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\nconst PasswordTextField = ({\n  setShowPassword, password, setPassword, showPassword,\n}) => (\n  <TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    name=\"password\"\n    label=\"Password\"\n    type={showPassword ? 'text' : 'password'}\n    id=\"password\"\n    value={password}\n    onChange={e => setPassword(e.target.value)}\n    InputProps={{\n      endAdornment: (\n        <InputAdornment position=\"end\">\n          <IconButton\n            edge=\"end\"\n            aria-label=\"toggle password visibility\"\n            onClick={() => setShowPassword(prevState => !prevState)}\n          >\n            {showPassword ? <VisibilityOff /> : <Visibility />}\n          </IconButton>\n        </InputAdornment>\n      ),\n    }}\n  />\n);\n\nexport default PasswordTextField;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst PlainTextField = ({ setValue, value, label }) => (\n  <TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    label={label}\n    type=\"text\"\n    id={label.toLowerCase()}\n    value={value}\n    onChange={e => setValue(e.target.value)}\n  />\n);\n\nexport default PlainTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const {\n    className, message, onClose, variant, ...other\n  } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={(\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n)}\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedSnackbars({\n  variant, message, open, onClose, autoHideDuration,\n}) {\n  const classes = useStyles2();\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    onClose();\n  }\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={autoHideDuration}\n        onClose={onClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant={variant}\n          message={message}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n","import { TangleNet, ICE_SERVERS } from 'utils/constants';\nimport React from 'react';\n\nexport const initialState = {\n  username: '',\n  userHash: '',\n  loggedIn: false,\n  seed: null,\n  myId: null,\n  tangleNet: TangleNet.DEV_NET1,\n  iceServers: ICE_SERVERS,\n  accountData: null,\n  monitoringInterval: 3000,\n  myAccount: null,\n  provider: TangleNet.DEV_NET1.URL,\n  myBalance: 0,\n};\n\nexport const DBContext = React.createContext();\n","import React, {\n  useGlobal, useState, getGlobal, useEffect, useContext,\n} from 'reactn';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getUserHash } from 'utils';\nimport PasswordTextField from 'components/shared/PasswordTextField';\nimport PlainTextField from 'components/shared/PlainTextField';\nimport Snackbar from 'components/shared/Snackbar';\nimport { DBContext } from 'store';\nimport { Color } from 'utils/constants';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: Color.PRIMARY,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: Color.PRIMARY,\n  },\n}));\n\nexport default function Login({ history }) {\n  const db = useContext(DBContext);\n  let login;\n\n  const [, setSeed] = useGlobal('seed');\n  const [, setLoggedIn] = useGlobal('loggedIn');\n  const [, setUsername] = useGlobal('username');\n  const [, setMyId] = useGlobal('myId');\n\n  const [snackbarVariant, setSnackbarVariant] = useState('info');\n  const [snackbarMessage, setSnackbarMessage] = useState('Info');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  function openSnackbar(message, variant) {\n    setSnackbarMessage(message);\n    setSnackbarVariant(variant);\n    setSnackbarOpen(true);\n  }\n\n  const [seedInput, setSeedInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [showPasswordInput, setShowPasswordInput] = useState(false);\n\n  const [loginWithSeed, setLoginWithSeed] = useState(false);\n\n  if (db) {\n    login = () => {\n      const userCollection = db.getCollection('users');\n      let user = null;\n      let userHash = '';\n      if (loginWithSeed) {\n        user = userCollection.findOne({ seed: seedInput });\n      } else {\n        userHash = getUserHash(usernameInput, passwordInput);\n        user = userCollection.findOne({ userHash });\n      }\n      if (!user) {\n        return openSnackbar('User not found', 'error');\n      }\n      const userData = JSON.stringify(user);\n      localStorage.setItem('userData', userData);\n      setSeed(user.seed);\n      setMyId(user.myId);\n      setUsername(user.username);\n      setLoggedIn(true);\n      return console.log(getGlobal());\n    };\n  }\n\n\n  const signup = () => {\n    history.push('/signup');\n  };\n\n  const toggleLoginWithSeed = () => {\n    setLoginWithSeed(prevState => !prevState);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {`Login with ${(loginWithSeed ? 'seed' : 'username/password')}`}\n        </Typography>\n        <form className={classes.form}>\n          {!loginWithSeed\n            ? (\n              <>\n                <PlainTextField\n                  label=\"Username\"\n                  value={usernameInput}\n                  setValue={setUsernameInput}\n                />\n                <PasswordTextField\n                  setShowPassword={setShowPasswordInput}\n                  password={passwordInput}\n                  setPassword={setPasswordInput}\n                  showPassword={showPasswordInput}\n                />\n              </>\n            )\n            : (\n              <PlainTextField\n                label=\"Seed\"\n                value={seedInput}\n                setValue={setSeedInput}\n              />\n            )}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={login}\n          >\n            Login\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Button type=\"button\" onClick={toggleLoginWithSeed}>\n                {loginWithSeed ? 'Login with name/password' : 'Login with seed'}\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button type=\"button\" onClick={signup}>\n                {'Create an account'}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        variant={snackbarVariant}\n        message={snackbarMessage}\n        open={snackbarOpen}\n        onClose={() => setSnackbarOpen(false)}\n        autoHideDuration={2000}\n      />\n    </Container>\n  );\n}\n","import Events from 'events';\nimport Peer from 'simple-peer';\nimport uuidv4 from 'uuid/v4';\nimport {\n  getCurrentTimestamp,\n  prepareData,\n  extractData,\n  getUserMedia,\n} from 'utils';\nimport { MAX_DEPTH } from 'utils/constants';\nimport { debounce } from 'debounce';\nimport { composeAPI } from '@iota/core';\nimport localPow from 'utils/pow';\n\nexport default class Communication extends Events {\n  constructor({\n    seed, username, myId, roomId, minWeight, iceServers, interval, provider,\n  }) {\n    super();\n    this.seed = seed;\n    this.myUsername = username;\n    this.myId = uuidv4();\n    // this.myId = myId;\n    this.roomId = roomId;\n    this.minWeight = minWeight;\n    this.monitorInterval = interval;\n    this.config = { iceServers };\n    this.API = composeAPI({\n      provider,\n      // attachToTangle: localPow,\n    });\n    this.API.getAccountData(seed, { security: 2 })\n      .then(res => this.emit('refreshAccount', res));\n\n    this.accountInterval = setInterval(() => this.API.getAccountData(seed, { security: 2 })\n      .then(res => this.emit('refreshAccount', res)), 20000);\n  }\n\n  type = {\n    WEBRTCSIGNAL: 'WEBRTCSIGNAL',\n    REQUEST: 'REQUEST',\n    DONATE_OFFER: 'DONATE_OFFER',\n    DONATE_ACCEPT: 'DONATE_ACCEPT',\n    CHAT_MESSAGE: 'CHAT_MESSAGE',\n  }\n  oldTransactions = {};\n  peerList = {};\n\n  stopRefreshingAccount = () => clearInterval(this.accountInterval);\n\n  startMonitoring = async () => {\n    const constraint = { video: true, audio: true };\n    this.stream = await getUserMedia(constraint);\n    this.currentTimestamp = getCurrentTimestamp();\n    try {\n      this.broadcastRequest();\n      this.isMonitoring = true;\n      this.monitorRequest();\n    } catch (err) {\n      this.isMonitoring = false;\n      console.error(err);\n    }\n  }\n\n  monitorRequest = async () => {\n    try {\n      const transactions = await this.getNewTransactions();\n      const bundles = this.getBundles(transactions);\n      const signals = this.getSignals(bundles);\n      console.log('New signals from Tangle:');\n      console.log(signals);\n      this.processSignals(signals);\n      if (this.isMonitoring) {\n        setTimeout(this.monitorRequest, this.monitorInterval);\n      }\n    } catch (error) {\n      setTimeout(this.monitorRequest, this.monitorInterval);\n      console.error(error);\n    }\n  }\n\n\n  sendMessage(peerId, message) {\n    const peer = this.peerList[peerId];\n    if (peer && peer.connected) {\n      peer.send(message);\n    }\n  }\n\n  sendDonationOffer = (peerId) => {\n    const message = {\n      type: this.type.DONATE_OFFER,\n    };\n    this.sendMessage(peerId, JSON.stringify(message));\n  }\n\n  broadcastMessage(message) {\n    for (const peerId of Object.keys(this.peerList)) {\n      if (this.peerList[peerId].connected) {\n        this.peerList[peerId].send(message);\n      }\n    }\n  }\n\n  broadcastRequest = () => {\n    const request = {\n      id: this.myId,\n      username: this.myUsername,\n      type: this.type.REQUEST,\n    };\n    this.broadcastTransaction(request);\n  }\n\n  broadcastTransaction = (data) => {\n    const message = prepareData(data, this.roomId);\n    this.API.prepareTransfers(this.seed, message)\n      .then(trytes => this.API.sendTrytes(trytes, MAX_DEPTH, this.minWeight));\n  }\n\n  getNewTransactions = async () => {\n    const searchValues = { tags: [this.roomId] };\n    const transactions = await this.API.findTransactionObjects(searchValues);\n    return transactions.filter((transaction) => {\n      const { timestamp, bundle } = transaction;\n      return timestamp > this.currentTimestamp\n          && !this.oldTransactions[bundle];\n    });\n  }\n\n  getBundles = (transactions) => {\n    const bundleMap = {};\n    const bundleList = [];\n    for (const transaction of transactions) {\n      const { bundle } = transaction;\n      this.oldTransactions[bundle] = true;\n      if (!bundleMap[bundle]) {\n        bundleMap[bundle] = [];\n      }\n      bundleMap[bundle].push(transaction);\n    }\n    for (const key in bundleMap) {\n      bundleList.push(bundleMap[key]);\n    }\n    return bundleList\n      .map(bundle => bundle\n        .sort((a, b) => (a.currentIndex > b.currentIndex ? 1 : -1)));\n  }\n\n  getSignals = bundles => bundles.reduce((signals, bundle) => {\n    const extractedSignal = extractData(bundle);\n    const { type, id } = extractedSignal;\n    if (!(type === this.type.REQUEST && id === this.myId)) {\n      signals.push(extractedSignal);\n    }\n    return signals;\n  }, [])\n\n  // getSignals = bundles => bundles.map(bundle => extractData(bundle))\n  //   .filter(({ type, id }) => !(type === this.type.REQUEST && id === this.myId))\n\n  startOffering = ({ id, username }) => {\n    if (!this.peerList[id]) {\n      const { stream, config } = this;\n      const peer = this.createPeer({\n        initiator: true,\n        stream,\n        id,\n        config,\n      });\n      this.attachEventHandlers(peer, id, username);\n    }\n  }\n\n  startAnswering = (id, peerId, username, data) => {\n    if (id === this.myId) {\n      if (!this.peerList[peerId]) {\n        console.log('started connector');\n        const { config, stream } = this;\n        const peer = this.createPeer({\n          initiator: false,\n          stream,\n          id: peerId,\n          config,\n        });\n        this.attachEventHandlers(peer, peerId, username);\n      }\n      for (const signalData of data) {\n        this.peerList[peerId].signal(signalData);\n      }\n    }\n  }\n\n  processSignals = (signals) => {\n    for (const signal of signals) {\n      const {\n        type, id, peerId, username, data,\n      } = signal;\n      switch (type) {\n        case this.type.REQUEST:\n          this.startOffering(signal);\n          break;\n        case this.type.WEBRTCSIGNAL:\n          this.startAnswering(id, peerId, username, data);\n          break;\n        default:\n          console.log('Unknown signal');\n      }\n    }\n  }\n\n  createPeer = ({\n    initiator, stream, id, config,\n  }) => {\n    const peer = new Peer({\n      initiator,\n      stream,\n      config,\n      trickle: true,\n    });\n    return this.peerList[id] = peer;\n  }\n\n  attachEventHandlers = (peer, id, username) => {\n    const sendAllSignals = debounce(({ signalData, signalQueue }) => {\n      this.broadcastTransaction(signalData);\n      signalQueue.length = 0;\n    }, 1000);\n\n    const identity = { id, username };\n    const signalQueue = [];\n\n    peer.on('signal', (data) => {\n      signalQueue.push(data);\n      const signalData = {\n        id,\n        username: this.myUsername,\n        type: this.type.WEBRTCSIGNAL,\n        peerId: this.myId,\n        data: [...signalQueue],\n      };\n\n      sendAllSignals({ signalData, signalQueue });\n      this.emit('signal', { ...identity, signalQueue });\n    });\n\n    peer.on('data', async (data) => {\n      let message = data.toString();\n      message = JSON.parse(message);\n      switch (message.type) {\n        case this.type.CHAT_MESSAGE: {\n          this.emit('chatmessage', { ...identity, message });\n          break;\n        }\n        case this.type.DONATE_OFFER: {\n          const address = await this.API.getNewAddress(this.seed, { security: 2 });\n          const response = {\n            type: this.type.DONATE_ACCEPT,\n            address,\n          };\n          peer.send(JSON.stringify(response));\n          break;\n        }\n        case this.type.DONATE_ACCEPT: {\n          const transfers = [{\n            value: 1,\n            address: message.address,\n          }];\n          this.API.prepareTransfers(this.seed, transfers)\n            .then(trytes => this.API.sendTrytes(trytes, MAX_DEPTH, this.minWeight))\n            .catch(err => console.log(err));\n          break;\n        }\n        default:\n      }\n      this.emit('data', { ...identity, data: data.toString() });\n    });\n\n    peer.on('stream', (stream) => {\n      this.emit('stream', { ...identity, srcObject: stream });\n    });\n\n    peer.on('track', (track, stream) => {\n      console.log('track');\n      this.emit('track', { ...identity, track, stream });\n    });\n\n    peer.on('connect', () => {\n      this.emit('connect', identity);\n    });\n\n    peer.on('close', () => {\n      console.log('close');\n      this.emit('close', identity);\n      peer.destroy();\n      delete this.peerList[id];\n    });\n\n    peer.on('error', (error) => {\n      console.log('error');\n      // this.emit('error', { ...identity, error });\n    });\n  }\n\n  stopStreaming = () => {\n    if (this.stream) {\n      const trackList = this.stream.getTracks();\n      for (const track of trackList) {\n        track.stop();\n      }\n    }\n  }\n\n  stopMonitoring = () => {\n    this.isMonitoring = false;\n  }\n\n  endMonitoring = () => {\n    this.stopStreaming();\n    this.isMonitoring = false;\n    for (const id of Object.keys(this.peerList)) {\n      this.peerList[id].destroy();\n    }\n    this.peerList = {};\n  }\n}\n","import React from 'react';\n\nexport default React.memo((props) => {\n  const {\n    username, id, srcObject, sendDonationOffer,\n  } = props;\n\n  const setPeerVideoRef = (ref) => {\n    if (ref) {\n      try {\n        ref.srcObject = srcObject;\n      } catch (err) {\n        console.log('error');\n      }\n    }\n  };\n\n  return (\n    <div className=\"peer\">\n      <video\n        className=\"peer__video\"\n        autoPlay\n        ref={ref => setPeerVideoRef(ref)}\n        width={300}\n        height={300}\n      >\n        <track kind=\"captions\" srcLang=\"en\" label={username} />\n      </video>\n      <div className=\"peer__username\">{`User: ${username}`}</div>\n      <button\n        type=\"button\"\n        className=\"peer__donate\"\n        onClick={sendDonationOffer}\n      >\n        Send 1 iota token\n      </button>\n    </div>\n  );\n});\n","import React, {\n  useEffect, useGlobal, useState,\n} from 'reactn';\nimport { generateTrytes, getUserMedia } from 'utils';\nimport { DEFAULT_INTERVAL } from 'utils/constants';\nimport Communication from './Communication';\nimport Peer from './Peer';\n\nwindow.genTryte = generateTrytes;\n\nexport default function Chatroom({ match: { params: { roomId } }, history }) {\n  const [username] = useGlobal('username');\n  const [myId] = useGlobal('myId');\n  const [tangleNet] = useGlobal('tangleNet');\n  const [iceServers] = useGlobal('iceServers');\n  const [seed] = useGlobal('seed');\n  const [peers, setPeers] = useState([]);\n  const [streams, setStreams] = useState([]);\n  const [peerCounter, setPeerCounter] = useState(0);\n  const [communication, setCommunication] = useState(null);\n  const [myBalance, setMyBalance] = useState(0);\n  const config = {\n    username,\n    seed,\n    myId,\n    roomId,\n    minWeight: tangleNet.MWM,\n    iceServers,\n    interval: DEFAULT_INTERVAL,\n    provider: tangleNet.URL,\n  };\n\n  const returnHome = () => history.push('/');\n\n  const sentDonationOffer = (id) => {\n    console.log('chatroom send donation');\n    communication.sendDonationOffer(id);\n  };\n\n  const stopMonitoring = () => communication.stopMonitoring();\n\n  const endMonitoring = () => communication.endMonitoring();\n\n  const startMonitoring = () => communication.startMonitoring();\n\n  const refreshAccount = ({ balance }) => {\n    console.log(balance);\n    console.log(myBalance);\n    setMyBalance(balance);\n  };\n\n  useEffect(() => {\n    /* eslint-disable-next-line no-shadow */\n\n    const communication = new Communication(config);\n    setCommunication(communication);\n\n    communication.startMonitoring();\n\n    communication.on('connect', (peer) => {\n      setPeers(prevState => [...prevState, peer]);\n      setPeerCounter(peers.length);\n    });\n\n    communication.on('stream', (peerStream) => {\n      setStreams(prevState => [...prevState, peerStream]);\n    });\n\n    communication.on('close', (peer) => {\n      setStreams(prevState => prevState.filter(stream => stream.id !== peer.id));\n      setPeerCounter(peers.length);\n    });\n\n    communication.on('refreshAccount', (account) => {\n      refreshAccount(account);\n    });\n\n    window.onbeforeunload = function () {\n      communication.endMonitoring();\n    };\n    return () => {\n      console.log('Chatroom closed');\n      window.onbeforeunload = undefined;\n      communication.endMonitoring();\n      communication.stopRefreshingAccount();\n    };\n  }, []);\n\n  return (\n    <div>\n      <div>{`My Balance: ${myBalance}`}</div>\n      <div>{`Room ID: ${roomId}`}</div>\n      <button type=\"button\" onClick={returnHome}>Return home</button>\n      <button type=\"button\" onClick={stopMonitoring}>Stop monitoring</button>\n      <button type=\"button\" onClick={endMonitoring}>End Peer connection</button>\n      <button type=\"button\" onClick={startMonitoring}>Start Monitoring</button>\n      <div>{peerCounter}</div>\n      {streams.map(stream => (\n        <Peer\n          id={stream.id}\n          key={stream.id}\n          username={stream.username}\n          srcObject={stream.srcObject}\n          sendDonationOffer={() => sentDonationOffer(stream.id)}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useContext } from 'reactn';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport PasswordTextField from 'components/shared/PasswordTextField';\nimport PlainTextField from 'components/shared/PlainTextField';\nimport { isTrytes } from '@iota/validators';\nimport Snackbar from 'components/shared/Snackbar';\nimport { getUserHash, generateTrytes } from 'utils';\nimport { DBContext } from 'store';\nimport { Color, SEED_LENGTH } from 'utils/constants';\nimport uuidv4 from 'uuid/v4';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: Color.PRIMARY,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: Color.PRIMARY,\n  },\n  seedGen: {\n    margin: theme.spacing(2, 0, 0),\n  },\n}));\n\nexport default function Signup({ history }) {\n  const db = useContext(DBContext);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [seed, setseed] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [snackbarVariant, setSnackbarVariant] = useState('info');\n  const [snackbarMessage, setSnackbarMessage] = useState('Info');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  function openSnackbar(message, variant) {\n    setSnackbarMessage(message);\n    setSnackbarVariant(variant);\n    setSnackbarOpen(true);\n  }\n\n  function generateSeed() {\n    setseed(generateTrytes(SEED_LENGTH));\n  }\n\n  const classes = useStyles();\n\n  function login() {\n    history.push('/login');\n  }\n\n  function signup() {\n    const userCollection = db.getCollection('users');\n    const existingUser = userCollection.findOne({ username });\n    const existingSeed = userCollection.findOne({ seed });\n    if (!username || !seed || !password) {\n      return openSnackbar('Please enter all required field', 'error');\n    }\n    if (existingUser) {\n      return openSnackbar('Username existed', 'error');\n    }\n    if (existingSeed) {\n      return openSnackbar('Account for seed existed', 'error');\n    }\n    if (!isTrytes(seed, SEED_LENGTH)) {\n      return openSnackbar('Invalid Seed', 'error');\n    }\n    const userHash = getUserHash(username, password);\n    const myId = uuidv4();\n    userCollection.insert({\n      username,\n      userHash,\n      seed,\n      myId,\n    });\n\n    openSnackbar('Account created', 'success');\n    history.push('/login');\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <PlainTextField\n            label=\"Username\"\n            value={username}\n            setValue={setUsername}\n          />\n          <PasswordTextField\n            setShowPassword={setShowPassword}\n            password={password}\n            setPassword={setPassword}\n            showPassword={showPassword}\n          />\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.seedGen}\n            onClick={generateSeed}\n          >\n            Generate Seed\n          </Button>\n\n          <PlainTextField\n            label=\"Seed\"\n            value={seed}\n            setValue={setseed}\n          />\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={signup}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={login}>\n                Already have an account? Log in\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        variant={snackbarVariant}\n        message={snackbarMessage}\n        open={snackbarOpen}\n        onClose={() => setSnackbarOpen(false)}\n        autoHideDuration={2000}\n      />\n    </Container>\n  );\n}\n","import React, {\n  useGlobal, useEffect, getGlobal, setGlobal, useState,\n} from 'reactn';\nimport { TAG_LENGTH, SEED_LENGTH } from 'utils/constants';\nimport { generateTrytes } from 'utils';\nimport { initialState } from 'store';\nimport { isTrytes } from '@iota/validators';\nimport { composeAPI } from '@iota/core';\n\nexport default function Account({ history }) {\n  console.log('home rendered');\n  const [seed] = useGlobal('seed');\n  const [provider] = useGlobal('provider');\n  const [username] = useGlobal('username');\n  const [myBalance, setMyBalance] = useState(0);\n  const [, setLoggedIn] = useGlobal('loggedIn');\n  const [roomId, setRoomId] = useState('');\n  const [faucetAddr, setFaucetAddr] = useState('');\n\n  const refreshAccount = (res) => {\n    console.log('refreshed account');\n    console.log(res);\n    setMyBalance(res.balance);\n    setFaucetAddr(res.latestAddress);\n  };\n\n  useEffect(() => {\n    const API = composeAPI({\n      provider,\n    });\n\n    API.getAccountData(seed, { security: 2 })\n      .then(res => refreshAccount(res));\n\n    const interval = setInterval(() => API.getAccountData(seed, { security: 2 })\n      .then(res => refreshAccount(res)), 20000);\n\n    return () => {\n      console.log('Home closed');\n      clearInterval(interval);\n    };\n  }, []);\n\n  function logout() {\n    localStorage.removeItem('userData');\n    setLoggedIn(false);\n    setGlobal(initialState);\n    console.log(getGlobal());\n  }\n\n  function createChatroom() {\n    const newRoomId = generateTrytes(TAG_LENGTH);\n    history.push(`chatroom/${newRoomId}`);\n  }\n\n  function joinChatroom() {\n    if (isTrytes(roomId, TAG_LENGTH)) {\n      history.push(`chatroom/${roomId}`);\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        {`My seed: ${seed}`}\n      </div>\n      <div>{`My username: ${username}`}</div>\n      <div>{`My Balance: ${myBalance}`}</div>\n      <div>\n        {`Use this address to request for devnet tokens: ${faucetAddr}`}\n      </div>\n      <div>\n        <a\n          target=\"_blank\"\n          href=\"https://faucet.devnet.iota.org\"\n          rel=\"noopener noreferrer\"\n        >\n      Open devnet faucet link in new tab\n        </a>\n      </div>\n      <button type=\"button\" onClick={createChatroom}>\n        Create chatroom\n      </button>\n      <button type=\"button\" onClick={joinChatroom}>\n        Join chatroom\n      </button>\n      <input type=\"text\" onChange={e => setRoomId(e.target.value)} value={roomId} />\n      <button type=\"button\" onClick={logout}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { TrinityRingsSpinner } from 'react-epic-spinners';\n\nconst style = {\n  backgroundColor: '#607D8B',\n  borderRadius: '12%',\n  height: '250px',\n  width: '250px',\n  boxShadow: '2px 2px 10px 0px rgba(0,0,0,0.59)',\n};\n\nconst Spinner = () => (\n  <TrinityRingsSpinner color=\"#33B3A6\" size={125} style={style} />\n);\n\nexport default Spinner;\n","import React, { useGlobal } from 'reactn';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { Routes } from 'utils/constants';\n\nconst RedirectIfLoggedIn = Component => withRouter((props) => {\n  /* eslint-disable-next-line */\n  const [ loggedIn ] = useGlobal('loggedIn');\n  if (loggedIn) {\n    return (<Redirect to={Routes.HOME} />);\n  }\n  return (<Component {...props} />);\n});\n\nexport default RedirectIfLoggedIn;\n","import React, { useGlobal } from 'reactn';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { Routes } from 'utils/constants';\n\nconst RequireAuth = Component => withRouter((props) => {\n  /* eslint-disable-next-line */\n  const [ loggedIn ] = useGlobal('loggedIn');\n  if (loggedIn) {\n    return (<Component {...props} />);\n  }\n  return (<Redirect to={Routes.LOGIN} />);\n});\n\nexport default RequireAuth;\n","import React, { useGlobal, useEffect, useContext } from 'reactn';\nimport { Helmet } from 'react-helmet';\nimport {\n  Route, Switch, Redirect,\n} from 'react-router-dom';\nimport Login from 'components/Login';\nimport Chatroom from 'components/Chatroom';\nimport Signup from 'components/Signup';\nimport Home from 'components/Home';\nimport ChatGUI from 'components/ChatGUI';\nimport RedirectIfLoggedIn from 'components/Auth/RedirectIfLoggedIn';\nimport RequireAuth from 'components/Auth/RequireAuth';\nimport { Routes } from 'utils/constants';\n\nconst App = () => (\n  <>\n    <Helmet>\n      <title>IOTA - WebRTC</title>\n      <meta name=\"description\" content=\"A decentralized chat and video call application\" />\n      <meta charSet=\"utf-8\" />\n    </Helmet>\n    <Switch>\n      <Route exact path={Routes.HOME} component={RequireAuth(Home)} />\n      <Route exact path={Routes.LOGIN} component={RedirectIfLoggedIn(Login)} />\n      <Route exact path={Routes.SIGNUP} component={RedirectIfLoggedIn(Signup)} />\n      <Route exact path={Routes.CHATROOM} component={RequireAuth(Chatroom)} />\n      <Route exact path={Routes.CHATGUI} component={ChatGUI} />\n      <Redirect to={Routes.HOME} />\n    </Switch>\n  </>\n);\n\nexport default App;\n","import React, { setGlobal, getGlobal } from 'reactn';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from 'components/App';\nimport Loki from 'lokijs';\nimport LokiIDBAdapter from 'lokijs/src/loki-indexed-adapter';\nimport * as Iota from '@iota/core';\nimport { initialState, DBContext } from './store';\n\n\nconst userData = localStorage.getItem('userData');\nif (userData) {\n  try {\n    const user = JSON.parse(userData);\n    setGlobal({ ...initialState, ...user, loggedIn: true });\n    console.log(getGlobal());\n  } catch (err) {\n    localStorage.removeItem('userData');\n    setGlobal(initialState);\n  }\n} else {\n  setGlobal(initialState);\n}\n\nconst adapter = new LokiIDBAdapter();\n\nconst autoloadCallback = () => {\n  console.log('Database loaded');\n  const userCollection = loki.getCollection('users');\n  if (!userCollection) {\n    loki.addCollection('users');\n  }\n};\n\nconst loki = new Loki('test.db', {\n  adapter,\n  autoload: true,\n  autosave: true,\n  autosaveInterval: 4000,\n  /* eslint-disable-next-line */\n  autoloadCallback,\n});\n\n\n/* debugging */\nwindow.iota = Iota;\n\n\nconst MOUNT_NODE = document.getElementById('root');\n\nconst render = () => {\n  console.log('render called');\n  ReactDOM.render(\n    <Router>\n      <CssBaseline />\n      <DBContext.Provider value={loki}>\n        <App />\n      </DBContext.Provider>\n    </Router>,\n    MOUNT_NODE,\n  );\n};\n\nrender();\n"],"sourceRoot":""}