{"version":3,"sources":["utils/constants.js","utils/index.js","components/shared/PasswordTextField.jsx","components/shared/PlainTextField.jsx","components/shared/Snackbar.jsx","store.js","components/Login/index.jsx","components/Chatroom/Communication.js","components/Chatroom/index.jsx","components/Signup/index.jsx","components/Home/index.jsx","components/ChatGUI/index.jsx","components/Auth/RedirectIfLoggedIn.jsx","components/Auth/RequireAuth.jsx","components/App/index.jsx","index.jsx"],"names":["TRYTES_CHARSET_REGEX","SEED_LENGTH","TAG_LENGTH","MAX_DEPTH","DEFAULT_INTERVAL","TangleNet","SPAM_NET","URL","MWM","DEV_NET1","DEV_NET2","Routes","Color","generateTrytes","maxLength","seed","window","crypto","getRandomValues","console","error","length","B64ToArrBuff","encode","Uint32Array","replace","substring","getCurrentTimestamp","Math","floor","Date","getTime","getUserHash","username","password","CryptoJS","SHA1","toString","getUserMedia","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","constraints","wrap","_context","prev","next","navigator","mediaDevices","abrupt","Error","stop","_x","apply","this","arguments","extractData","bundle","data","dataJSON","result","JSON","parse","extractJson","err","log","parseJsonFromBundle","LZUTF8","decompress","inputEncoding","prepareData","tag","compressedData","compress","outputEncoding","compressData","stringify","message","asciiToTrytes","address","value","PasswordTextField","setShowPassword","setPassword","showPassword","react_default","createElement","TextField","variant","margin","required","fullWidth","name","label","type","id","onChange","e","target","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","onClick","prevState","VisibilityOff_default","Visibility_default","PlainTextField","setValue","toLowerCase","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","other","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","key","color","Close_default","useStyles2","CustomizedSnackbars","open","autoHideDuration","Snackbar","anchorOrigin","vertical","horizontal","event","reason","initialState","userHash","loggedIn","myId","tangleNet","iceServers","urls","accountData","monitoringInterval","DBContext","React","createContext","useStyles","@global","body","common","white","paper","marginTop","flexDirection","avatar","form","width","submit","Login","login","history","db","useContext","_useGlobal","useGlobal","setSeed","slicedToArray","_useGlobal3","setLoggedIn","_useGlobal5","setUsername","_useGlobal7","setMyId","_useState","useState","_useState2","snackbarVariant","setSnackbarVariant","_useState3","_useState4","snackbarMessage","setSnackbarMessage","_useState5","_useState6","snackbarOpen","setSnackbarOpen","_useState7","_useState8","seedInput","setSeedInput","_useState9","_useState10","passwordInput","setPasswordInput","_useState11","_useState12","usernameInput","setUsernameInput","_useState13","_useState14","showPasswordInput","setShowPasswordInput","_useState15","_useState16","loginWithSeed","setLoginWithSeed","userCollection","getCollection","user","findOne","userData","localStorage","setItem","getGlobal","build_default","Container","component","maxWidth","Avatar","LockOutlined_default","Typography","concat","shared_PlainTextField","Fragment","shared_PasswordTextField","Button","Grid","container","item","xs","push","Communication","_this","roomId","minWeight","interval","provider","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","peerList","monitorInterval","oldTransactions","requestList","startMonitoring","constraint","video","audio","stream","sent","clearInterval","currentTimestamp","broadcastRequest","setInterval","monitorRequest","_callee2","request","_context2","myUsername","Type","REQUEST","broadcastTransaction","iota","prepareTransfers","then","_ref4","_callee3","trytes","_context3","sendTrytes","_callee4","transactions","bundles","signals","_context4","getNewTransactions","getBundles","getSignals","processSignals","t0","_callee5","searchValues","_context5","tags","findTransactionObjects","filter","transaction","timestamp","bundleMap","bundleList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","return","map","sort","b","currentIndex","_ref7","startOffering","signal","_assertThisInitialize","assertThisInitialized","config","peer","createPeer","initiator","attachEventHandlers","startAnswering","peerId","_assertThisInitialize2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","signalData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","WEBRTCSIGNAL","_ref8","Peer","trickle","sendAllSignals","debounce","_ref9","signalQueue","identity","on","emit","objectSpread","track","destroy","stopMonitoring","uuidv4","composeAPI","_i","_Object$keys","keys","connected","send","_i2","_Object$keys2","Events","Chatroom","match","params","_useGlobal9","setPeers","streams","setStreams","peerCounter","setPeerCounter","communication","setCommunication","peerVideoRefs","useEffect","toConsumableArray","peerStream","broadcastMessage","endMonitoring","autoPlay","style","height","ref","srcObject","setPeerVideoRefs","kind","srcLang","genTryte","marginBottom","seedGen","Signup","setseed","openSnackbar","noValidate","existingUser","existingSeed","isTrytes","insert","justify","Account","_useGlobal4","setAccountData","setRoomId","getAccountData","res","newRoomId","removeItem","setGlobal","borderRadius","boxShadow","Spinner","react_epic_spinners_umd_min","size","RedirectIfLoggedIn","Component","withRouter","react_router","to","RequireAuth","App","Helmet","content","charSet","exact","path","Home","ChatGUI","getItem","adapter","LokiIDBAdapter","loki","Loki","autoload","autosave","autosaveInterval","autoloadCallback","addCollection","MOUNT_NODE","document","getElementById","ReactDOM","render","react_router_dom","CssBaseline","Provider","components_App"],"mappings":"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","file":"static/js/main.4b92f160.chunk.js","sourcesContent":["/**\n * Iota constants\n */\nexport const TRYTES_CHARSET_REGEX = /[^A-Z9]+/g;\nexport const SEED_LENGTH = 81;\nexport const TAG_LENGTH = 27;\nexport const MAX_DEPTH = 4;\nexport const DEFAULT_INTERVAL = 2000;\nexport const ICE_SERVERS = [{\n  urls: 'stun:global.stun.twilio.com:3478?transport=udp',\n}, {\n  urls: 'stun:stun1.l.google.com:19302',\n}, {\n  urls: 'stun:stun2.l.google.com:19302',\n}, {\n  urls: 'stun:stun.l.google.com:19302',\n}, {\n  urls: 'stun:stun.vodafone.ro:3478',\n}, {\n  urls: 'stun:stun.xs4all.nl:3478',\n}];\n\nexport const TangleNet = {\n  SPAM_NET: {\n    URL: 'https://nodes.spamnet.iota.org:443',\n    MWM: 7,\n  },\n  DEV_NET1: {\n    URL: 'https://nodes.devnet.iota.org:443',\n    MWM: 9,\n  },\n  DEV_NET2: {\n    URL: 'https://nodes.devnet.thetangle.org:443',\n    MWM: 9,\n  },\n};\n\nexport const Routes = {\n  HOME: '/',\n  SIGNUP: '/signup',\n  LOGIN: '/login',\n  CHATROOM: '/chatroom/:roomId',\n  CHATGUI: '/chatgui',\n};\n\nexport const Color = {\n  PRIMARY: '#33B3A6',\n  BACKGROUND: '#607D8B',\n};\n","import CryptoJS from 'crypto-js';\nimport B64ToArrBuff from 'base64-arraybuffer';\nimport LZUTF8 from 'lzutf8';\nimport { extractJson } from '@iota/extract-json';\nimport { asciiToTrytes } from '@iota/converter';\nimport { TRYTES_CHARSET_REGEX, SEED_LENGTH } from './constants';\n\nexport function generateTrytes(maxLength) {\n  let seed = '';\n  if (window && window.crypto && window.crypto.getRandomValues) {\n    while (seed.length < maxLength) {\n      seed += B64ToArrBuff\n        .encode(window.crypto.getRandomValues(new Uint32Array(maxLength)))\n        .replace(TRYTES_CHARSET_REGEX, '');\n    }\n  } else {\n    return console.error('No native crypto random available');\n  }\n  return seed.substring(0, maxLength);\n}\n\nfunction compressData(data) {\n  return LZUTF8.compress(data, { outputEncoding: 'Base64' });\n}\n\nfunction decompressData(data) {\n  return LZUTF8.decompress(data, { inputEncoding: 'Base64' });\n}\n\nexport function parseJsonFromBundle(bundle) {\n  let result;\n  try {\n    result = JSON.parse(extractJson(bundle));\n  } catch (err) {\n    console.log(err);\n    console.log(bundle);\n  }\n  return result;\n}\n\nexport const getCurrentTimestamp = () => Math.floor(new Date().getTime() / 1000);\n\nexport const getUserHash = (username, password) => {\n  const hash = CryptoJS.SHA1(username + password);\n  return hash.toString();\n};\n\nexport const getUserMedia = async (constraints) => {\n  if (navigator\n    && navigator.mediaDevices\n    && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  return new Error('User Media Not Supported!');\n};\n\nexport const extractData = (bundle) => {\n  const dataJSON = parseJsonFromBundle(bundle);\n  return JSON.parse(decompressData(dataJSON));\n};\n\nexport const prepareData = (data, tag) => {\n  const compressedData = compressData(JSON.stringify(data));\n  const message = asciiToTrytes(JSON.stringify(compressedData));\n  return [{\n    address: generateTrytes(SEED_LENGTH),\n    tag,\n    value: 0,\n    message,\n  }];\n};\n","import React from 'react';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\nconst PasswordTextField = ({\n  setShowPassword, password, setPassword, showPassword,\n}) => (\n  <TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    name=\"password\"\n    label=\"Password\"\n    type={showPassword ? 'text' : 'password'}\n    id=\"password\"\n    value={password}\n    onChange={e => setPassword(e.target.value)}\n    InputProps={{\n      endAdornment: (\n        <InputAdornment position=\"end\">\n          <IconButton\n            edge=\"end\"\n            aria-label=\"toggle password visibility\"\n            onClick={() => setShowPassword(prevState => !prevState)}\n          >\n            {showPassword ? <VisibilityOff /> : <Visibility />}\n          </IconButton>\n        </InputAdornment>\n      ),\n    }}\n  />\n);\n\nexport default PasswordTextField;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst PlainTextField = ({ setValue, value, label }) => (\n  <TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    label={label}\n    type=\"text\"\n    id={label.toLowerCase()}\n    value={value}\n    onChange={e => setValue(e.target.value)}\n  />\n);\n\nexport default PlainTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const {\n    className, message, onClose, variant, ...other\n  } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={(\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n)}\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedSnackbars({\n  variant, message, open, onClose, autoHideDuration,\n}) {\n  const classes = useStyles2();\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    onClose();\n  }\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={autoHideDuration}\n        onClose={onClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant={variant}\n          message={message}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n","import { TangleNet, ICE_SERVERS } from 'utils/constants';\nimport React from 'react';\n\nexport const initialState = {\n  username: '',\n  userHash: '',\n  loggedIn: false,\n  seed: null,\n  myId: null,\n  tangleNet: TangleNet.DEV_NET1,\n  iceServers: ICE_SERVERS,\n  accountData: null,\n  monitoringInterval: 2000,\n};\n\nexport const DBContext = React.createContext();\n","import React, {\n  useGlobal, useState, getGlobal, useEffect, useContext,\n} from 'reactn';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getUserHash } from 'utils';\nimport PasswordTextField from 'components/shared/PasswordTextField';\nimport PlainTextField from 'components/shared/PlainTextField';\nimport Snackbar from 'components/shared/Snackbar';\nimport { DBContext } from 'store';\nimport { Color } from 'utils/constants';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: Color.PRIMARY,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: Color.PRIMARY,\n  },\n}));\n\nexport default function Login({ history }) {\n  const db = useContext(DBContext);\n  let login;\n\n  const [, setSeed] = useGlobal('seed');\n  const [, setLoggedIn] = useGlobal('loggedIn');\n  const [, setUsername] = useGlobal('username');\n  const [, setMyId] = useGlobal('myId');\n\n  const [snackbarVariant, setSnackbarVariant] = useState('info');\n  const [snackbarMessage, setSnackbarMessage] = useState('Info');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  function openSnackbar(message, variant) {\n    setSnackbarMessage(message);\n    setSnackbarVariant(variant);\n    setSnackbarOpen(true);\n  }\n\n  const [seedInput, setSeedInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [showPasswordInput, setShowPasswordInput] = useState(false);\n\n  const [loginWithSeed, setLoginWithSeed] = useState(false);\n\n  if (db) {\n    login = () => {\n      const userCollection = db.getCollection('users');\n      let user = null;\n      let userHash = '';\n      if (loginWithSeed) {\n        user = userCollection.findOne({ seed: seedInput });\n      } else {\n        userHash = getUserHash(usernameInput, passwordInput);\n        user = userCollection.findOne({ userHash });\n      }\n      if (!user) {\n        return openSnackbar('User not found', 'error');\n      }\n      const userData = JSON.stringify(user);\n      localStorage.setItem('userData', userData);\n      setSeed(user.seed);\n      setMyId(user.myId);\n      setUsername(user.username);\n      setLoggedIn(true);\n      return console.log(getGlobal());\n    };\n  }\n\n\n  const signup = () => {\n    history.push('/signup');\n  };\n\n  const toggleLoginWithSeed = () => {\n    setLoginWithSeed(prevState => !prevState);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {`Login with ${(loginWithSeed ? 'seed' : 'username/password')}`}\n        </Typography>\n        <form className={classes.form}>\n          {!loginWithSeed\n            ? (\n              <>\n                <PlainTextField\n                  label=\"Username\"\n                  value={usernameInput}\n                  setValue={setUsernameInput}\n                />\n                <PasswordTextField\n                  setShowPassword={setShowPasswordInput}\n                  password={passwordInput}\n                  setPassword={setPasswordInput}\n                  showPassword={showPasswordInput}\n                />\n              </>\n            )\n            : (\n              <PlainTextField\n                label=\"Seed\"\n                value={seedInput}\n                setValue={setSeedInput}\n              />\n            )}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={login}\n          >\n            Login\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Button type=\"button\" onClick={toggleLoginWithSeed}>\n                {loginWithSeed ? 'Login with name/password' : 'Login with seed'}\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button type=\"button\" onClick={signup}>\n                {'Create an account'}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        variant={snackbarVariant}\n        message={snackbarMessage}\n        open={snackbarOpen}\n        onClose={() => setSnackbarOpen(false)}\n        autoHideDuration={2000}\n      />\n    </Container>\n  );\n}\n","import Events from 'events';\nimport Peer from 'simple-peer';\nimport uuidv4 from 'uuid/v4';\nimport {\n  getCurrentTimestamp,\n  prepareData,\n  extractData,\n  getUserMedia,\n} from 'utils';\nimport { MAX_DEPTH } from 'utils/constants';\nimport { debounce } from 'debounce';\nimport { composeAPI } from '@iota/core';\n\nexport default class Communication extends Events {\n  constructor({\n    seed, username, myId, roomId, minWeight, iceServers, interval, provider,\n  }) {\n    super();\n    this.seed = seed;\n    this.myUsername = username;\n    this.myId = uuidv4();\n    // this.myId = myId;\n    this.roomId = roomId;\n    this.minWeight = minWeight;\n    this.interval = interval;\n    this.config = { iceServers };\n    this.iota = composeAPI({ provider });\n  }\n\n  static Type = {\n    WEBRTCSIGNAL: 'WEBRTCSIGNAL',\n    REQUEST: 'REQUEST',\n  }\n  peerList = {};\n  monitorInterval = null;\n  oldTransactions = {};\n  requestList = {};\n\n  startMonitoring = async () => {\n    const constraint = { video: true, audio: true };\n    this.stream = await getUserMedia(constraint);\n    clearInterval(this.monitorInterval);\n    this.currentTimestamp = getCurrentTimestamp();\n    try {\n      this.broadcastRequest();\n      this.monitorInterval = setInterval(this.monitorRequest, this.interval);\n    } catch (err) {\n      clearInterval(this.monitorInterval);\n      console.error(err);\n    }\n  }\n\n  broadcastRequest = async () => {\n    const request = {\n      id: this.myId,\n      username: this.myUsername,\n      type: Communication.Type.REQUEST,\n    };\n    this.broadcastTransaction(request);\n  }\n\n  broadcastTransaction = (data) => {\n    const message = prepareData(data, this.roomId);\n    this.iota.prepareTransfers(this.seed, message).then(async (trytes) => {\n      this.iota.sendTrytes(trytes, MAX_DEPTH, this.minWeight);\n    });\n  }\n\n  monitorRequest = async () => {\n    try {\n      const transactions = await this.getNewTransactions();\n      const bundles = this.getBundles(transactions);\n      const signals = this.getSignals(bundles);\n      console.log('New signals from Tangle:');\n      console.log(signals);\n      this.processSignals(signals);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  getNewTransactions = async () => {\n    const searchValues = { tags: [this.roomId] };\n    const transactions = await this.iota.findTransactionObjects(searchValues);\n    return transactions.filter((transaction) => {\n      const { timestamp, bundle } = transaction;\n      return timestamp > this.currentTimestamp\n          && !this.oldTransactions[bundle];\n    });\n  }\n\n  getBundles = (transactions) => {\n    const bundleMap = {};\n    const bundleList = [];\n    for (const transaction of transactions) {\n      const { bundle } = transaction;\n      this.oldTransactions[bundle] = true;\n      if (!bundleMap[bundle]) {\n        bundleMap[bundle] = [];\n      }\n      bundleMap[bundle].push(transaction);\n    }\n    for (const key in bundleMap) {\n      bundleList.push(bundleMap[key]);\n    }\n    return bundleList\n      .map(bundle => bundle\n        .sort((a, b) => (a.currentIndex > b.currentIndex ? 1 : -1)));\n  }\n\n  getSignals = bundles => bundles.map(bundle => extractData(bundle, this.roomId))\n    .filter(({ type, id }) => !(type === Communication.Type.REQUEST && id === this.myId))\n\n  startOffering = (signal) => {\n    this.requestList[signal.id] = signal;\n    for (const id in this.requestList) {\n      if (!this.peerList[id]) {\n        const { username } = this.requestList[id];\n        const { stream, config } = this;\n        const peer = this.createPeer({\n          initiator: true,\n          stream,\n          id,\n          config,\n        });\n        this.attachEventHandlers(peer, id, username);\n      }\n    }\n  }\n\n  startAnswering = (id, peerId, username, data) => {\n    if (id === this.myId) {\n      if (!this.peerList[peerId]) {\n        console.log('started connector');\n        const { config, stream } = this;\n        const peer = this.createPeer({\n          initiator: false,\n          stream,\n          id: peerId,\n          config,\n        });\n        this.attachEventHandlers(peer, peerId, username);\n      }\n      for (const signalData of data) {\n        this.peerList[peerId].signal(signalData);\n      }\n    }\n  }\n\n  processSignals = (signals) => {\n    for (const signal of signals) {\n      const {\n        type, id, peerId, username, data,\n      } = signal;\n      switch (type) {\n        case Communication.Type.REQUEST:\n          this.startOffering(signal);\n          break;\n        case Communication.Type.WEBRTCSIGNAL:\n          this.startAnswering(id, peerId, username, data);\n          break;\n        default:\n          console.log('Unknown signal type');\n      }\n    }\n  }\n\n  broadcastMessage(message) {\n    for (const peerId of Object.keys(this.peerList)) {\n      if (this.peerList[peerId].connected) {\n        this.peerList[peerId].send(message);\n      }\n    }\n  }\n\n  createPeer = ({\n    initiator, stream, id, config,\n  }) => {\n    const peer = new Peer({\n      initiator,\n      stream,\n      config,\n      trickle: true,\n    });\n    return this.peerList[id] = peer;\n  }\n\n  attachEventHandlers = (peer, id, username) => {\n    const sendAllSignals = debounce(({ signalData, signalQueue }) => {\n      this.broadcastTransaction(signalData);\n      signalQueue.length = 0;\n    }, 1000);\n\n    const identity = { id, username };\n    const signalQueue = [];\n\n    peer.on('signal', (data) => {\n      signalQueue.push(data);\n      const signalData = {\n        id,\n        username,\n        type: Communication.Type.WEBRTCSIGNAL,\n        peerId: this.myId,\n        data: [...signalQueue],\n      };\n\n      sendAllSignals({ signalData, signalQueue });\n      this.emit('signal', { ...identity, signalQueue });\n    });\n\n    peer.on('data', (data) => {\n      this.emit('data', { ...identity, data: data.toString() });\n    });\n\n    peer.on('stream', (stream) => {\n      this.emit('stream', { ...identity, stream });\n    });\n\n    peer.on('track', (track, stream) => {\n      this.emit('track', { ...identity, track, stream });\n    });\n\n    peer.on('connect', () => {\n      this.emit('connect', identity);\n    });\n\n    peer.on('close', () => {\n      this.emit('close', identity);\n      peer.destroy();\n      delete this.peerList[id];\n      delete this.requestList[id];\n    });\n\n    peer.on('error', (error) => {\n      // this.emit('error', { ...identity, error });\n      console.log(error);\n    });\n  }\n\n  stopMonitoring = () => {\n    clearInterval(this.monitorInterval);\n  }\n\n  endMonitoring() {\n    clearInterval(this.monitorInterval);\n    for (const id of Object.keys(this.peerList)) {\n      this.peerList[id].destroy();\n    }\n    this.peerList = {};\n    this.requestList = {};\n  }\n}\n","import React, {\n  useEffect, useGlobal, useState,\n} from 'reactn';\nimport { generateTrytes, getUserMedia } from 'utils';\nimport { DEFAULT_INTERVAL } from 'utils/constants';\nimport Communication from './Communication';\n\nwindow.genTryte = generateTrytes;\n\nexport default function Chatroom({ match: { params: { roomId } } }) {\n  console.log('Chatroom called');\n  const [username] = useGlobal('username');\n  const [myId] = useGlobal('myId');\n  const [tangleNet] = useGlobal('tangleNet');\n  const [iceServers] = useGlobal('iceServers');\n  const [seed] = useGlobal('seed');\n  const [peers, setPeers] = useState([]);\n  const [streams, setStreams] = useState([]);\n  const [peerCounter, setPeerCounter] = useState(0);\n  const [communication, setCommunication] = useState(null);\n\n  const peerVideoRefs = {};\n\n  const config = {\n    username,\n    seed,\n    myId,\n    roomId,\n    minWeight: tangleNet.MWM,\n    iceServers,\n    interval: DEFAULT_INTERVAL,\n    provider: tangleNet.URL,\n  };\n\n  const sendMessage = () => communication.broadcastMessage(' A NEW MESSAGE');\n\n  const stopMonitoring = () => communication.stopMonitoring();\n\n  const endMonitoring = () => communication.endMonitoring();\n\n  const startMonitoring = () => communication.startMonitoring();\n\n  const setPeerVideoRefs = (ref, id, stream) => {\n    if (ref) {\n      try {\n        peerVideoRefs[id] = ref;\n        ref.srcObject = stream;\n      } catch (err) {\n        console.log('error');\n      }\n    }\n  };\n\n  useEffect(() => {\n    /* eslint-disable-next-line no-shadow */\n    const communication = new Communication(config);\n    setCommunication(communication);\n\n    communication.startMonitoring();\n\n    communication.on('connect', (peer) => {\n      setPeers(prevState => [...prevState, peer]);\n      setPeerCounter(prevState => prevState + 1);\n    });\n\n    communication.on('stream', (peerStream) => {\n      setStreams(prevState => [...prevState, peerStream]);\n    });\n\n    communication.on('close', (peer) => {\n      setStreams(prevState => prevState.filter(stream => stream.id !== peer.id));\n      setPeerCounter(prevState => prevState - 1);\n    });\n\n    return () => console.log('unmounted');\n  }, []);\n\n  return (\n    <div>\n      <button type=\"button\" onClick={sendMessage}>Send a message</button>\n      <button type=\"button\" onClick={stopMonitoring}>Stop monitoring</button>\n      <button type=\"button\" onClick={endMonitoring}>End Peer connection</button>\n      <button type=\"button\" onClick={startMonitoring}>Start Monitoring</button>\n      <div>{peerCounter}</div>\n      {streams.map(stream => (\n        <div key={stream.id}>\n          <div />\n          <video\n            autoPlay\n            style={{ width: '250px', height: '250px' }}\n            ref={ref => setPeerVideoRefs(ref, stream.id, stream.stream)}\n          >\n            <track kind=\"captions\" srcLang=\"en\" label={stream.username} />\n          </video>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useContext } from 'reactn';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport PasswordTextField from 'components/shared/PasswordTextField';\nimport PlainTextField from 'components/shared/PlainTextField';\nimport { isTrytes } from '@iota/validators';\nimport Snackbar from 'components/shared/Snackbar';\nimport { getUserHash, generateTrytes } from 'utils';\nimport { DBContext } from 'store';\nimport { Color, SEED_LENGTH } from 'utils/constants';\nimport uuidv4 from 'uuid/v4';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: Color.PRIMARY,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: Color.PRIMARY,\n  },\n  seedGen: {\n    margin: theme.spacing(2, 0, 0),\n  },\n}));\n\nexport default function Signup({ history }) {\n  const db = useContext(DBContext);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [seed, setseed] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [snackbarVariant, setSnackbarVariant] = useState('info');\n  const [snackbarMessage, setSnackbarMessage] = useState('Info');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  function openSnackbar(message, variant) {\n    setSnackbarMessage(message);\n    setSnackbarVariant(variant);\n    setSnackbarOpen(true);\n  }\n\n  function generateSeed() {\n    setseed(generateTrytes(SEED_LENGTH));\n  }\n\n  const classes = useStyles();\n\n  function login() {\n    history.push('/login');\n  }\n\n  function signup() {\n    const userCollection = db.getCollection('users');\n    const existingUser = userCollection.findOne({ username });\n    const existingSeed = userCollection.findOne({ seed });\n    if (!username || !seed || !password) {\n      return openSnackbar('Please enter all required field', 'error');\n    }\n    if (existingUser) {\n      return openSnackbar('Username existed', 'error');\n    }\n    if (existingSeed) {\n      return openSnackbar('Account for seed existed', 'error');\n    }\n    if (!isTrytes(seed, SEED_LENGTH)) {\n      return openSnackbar('Invalid Seed', 'error');\n    }\n    const userHash = getUserHash(username, password);\n    const myId = uuidv4();\n    userCollection.insert({\n      username,\n      userHash,\n      seed,\n      myId,\n    });\n\n    openSnackbar('Account created', 'success');\n    history.push('/login');\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <PlainTextField\n            label=\"Username\"\n            value={username}\n            setValue={setUsername}\n          />\n          <PasswordTextField\n            setShowPassword={setShowPassword}\n            password={password}\n            setPassword={setPassword}\n            showPassword={showPassword}\n          />\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.seedGen}\n            onClick={generateSeed}\n          >\n            Generate Seed\n          </Button>\n\n          <PlainTextField\n            label=\"Seed\"\n            value={seed}\n            setValue={setseed}\n          />\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={signup}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={login}>\n                Already have an account? Log in\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        variant={snackbarVariant}\n        message={snackbarMessage}\n        open={snackbarOpen}\n        onClose={() => setSnackbarOpen(false)}\n        autoHideDuration={2000}\n      />\n    </Container>\n  );\n}\n","import React, {\n  useGlobal, useEffect, getGlobal, setGlobal, useState,\n} from 'reactn';\nimport { composeAPI } from '@iota/core';\nimport { TangleNet, TAG_LENGTH } from 'utils/constants';\nimport { generateTrytes } from 'utils';\nimport { initialState } from 'store';\nimport { isTrytes } from '@iota/validators';\n\nexport default function Account({ history }) {\n  const [seed] = useGlobal('seed');\n  const [accountData, setAccountData] = useGlobal('accountData');\n  const [, setLoggedIn] = useGlobal('loggedIn');\n  const [roomId, setRoomId] = useState('');\n  useEffect(() => {\n    const iota = composeAPI({\n      provider: TangleNet.DEV_NET1.URL,\n    });\n    iota.getAccountData(seed).then((res) => {\n      console.log(res);\n      setAccountData(res);\n    });\n  }, []);\n\n  function logout() {\n    localStorage.removeItem('userData');\n    setLoggedIn(false);\n    setGlobal(initialState);\n    console.log(getGlobal());\n  }\n\n  function createChatroom() {\n    const newRoomId = generateTrytes(TAG_LENGTH);\n    history.push(`chatroom/${newRoomId}`);\n  }\n\n  function joinChatroom() {\n    if (isTrytes(roomId, TAG_LENGTH)) {\n      history.push(`chatroom/${roomId}`);\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        {`Your seed: ${seed}`}\n      </div>\n      <div>\n        {`Your account data: ${accountData}`}\n      </div>\n      <button type=\"button\" onClick={createChatroom}>\n        Create chatroom\n      </button>\n      <button type=\"button\" onClick={joinChatroom}>\n        Join chatroom\n      </button>\n      <input type=\"text\" onChange={e => setRoomId(e.target.value)} value={roomId} />\n      <button type=\"button\" onClick={logout}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { TrinityRingsSpinner } from 'react-epic-spinners';\n\nconst style = {\n  backgroundColor: '#607D8B',\n  borderRadius: '12%',\n  height: '250px',\n  width: '250px',\n  boxShadow: '2px 2px 10px 0px rgba(0,0,0,0.59)',\n};\n\nconst Spinner = () => (\n  <TrinityRingsSpinner color=\"#33B3A6\" size={125} style={style} />\n);\n\nexport default Spinner;\n","import React, { useGlobal } from 'reactn';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { Routes } from 'utils/constants';\n\nconst RedirectIfLoggedIn = Component => withRouter((props) => {\n  /* eslint-disable-next-line */\n  const [ loggedIn ] = useGlobal('loggedIn');\n  if (loggedIn) {\n    return (<Redirect to={Routes.HOME} />);\n  }\n  return (<Component {...props} />);\n});\n\nexport default RedirectIfLoggedIn;\n","import React, { useGlobal } from 'reactn';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { Routes } from 'utils/constants';\n\nconst RequireAuth = Component => withRouter((props) => {\n  /* eslint-disable-next-line */\n  const [ loggedIn ] = useGlobal('loggedIn');\n  if (loggedIn) {\n    return (<Component {...props} />);\n  }\n  return (<Redirect to={Routes.LOGIN} />);\n});\n\nexport default RequireAuth;\n","import React, { useGlobal, useEffect, useContext } from 'reactn';\nimport { Helmet } from 'react-helmet';\nimport {\n  Route, Switch, Redirect,\n} from 'react-router-dom';\nimport Login from 'components/Login';\nimport Chatroom from 'components/Chatroom';\nimport Signup from 'components/Signup';\nimport Home from 'components/Home';\nimport ChatGUI from 'components/ChatGUI';\nimport RedirectIfLoggedIn from 'components/Auth/RedirectIfLoggedIn';\nimport RequireAuth from 'components/Auth/RequireAuth';\nimport { Routes } from 'utils/constants';\n\nconst App = () => (\n  <>\n    <Helmet>\n      <title>IOTA - WebRTC</title>\n      <meta name=\"description\" content=\"A decentralized chat and video call application\" />\n      <meta charSet=\"utf-8\" />\n    </Helmet>\n    <Switch>\n      <Route exact path={Routes.HOME} component={RequireAuth(Home)} />\n      <Route exact path={Routes.LOGIN} component={RedirectIfLoggedIn(Login)} />\n      <Route exact path={Routes.SIGNUP} component={RedirectIfLoggedIn(Signup)} />\n      <Route exact path={Routes.CHATROOM} component={RequireAuth(Chatroom)} />\n      <Route exact path={Routes.CHATGUI} component={ChatGUI} />\n      <Redirect to={Routes.HOME} />\n    </Switch>\n  </>\n);\n\nexport default App;\n","import React, { setGlobal, getGlobal } from 'reactn';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from 'components/App';\nimport Loki from 'lokijs';\nimport LokiIDBAdapter from 'lokijs/src/loki-indexed-adapter';\nimport { initialState, DBContext } from './store';\n\nconst userData = localStorage.getItem('userData');\nif (userData) {\n  try {\n    const user = JSON.parse(userData);\n    setGlobal({ ...initialState, ...user, loggedIn: true });\n    console.log(getGlobal());\n  } catch (err) {\n    localStorage.removeItem('userData');\n    setGlobal(initialState);\n  }\n} else {\n  setGlobal(initialState);\n}\n\nconst adapter = new LokiIDBAdapter();\n\nconst autoloadCallback = () => {\n  console.log('Database loaded');\n  const userCollection = loki.getCollection('users');\n  if (!userCollection) {\n    loki.addCollection('users');\n  }\n};\n\nconst loki = new Loki('test.db', {\n  adapter,\n  autoload: true,\n  autosave: true,\n  autosaveInterval: 4000,\n  /* eslint-disable-next-line */\n  autoloadCallback,\n});\n\nconst MOUNT_NODE = document.getElementById('root');\n\nconst render = () => {\n  console.log('render called');\n  ReactDOM.render(\n    <Router>\n      <CssBaseline />\n      <DBContext.Provider value={loki}>\n        <App />\n      </DBContext.Provider>\n    </Router>,\n    MOUNT_NODE,\n  );\n};\n\nrender();\n"],"sourceRoot":""}