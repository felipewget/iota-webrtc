{"version":3,"sources":["utils/constants.js","utils/index.js","components/shared/PasswordTextField.jsx","components/shared/PlainTextField.jsx","components/shared/Snackbar.jsx","store.js","components/Login/index.jsx","components/Chatroom/Communication.js","components/Chatroom/Peer.jsx","components/Chatroom/index.jsx","components/Signup/index.jsx","components/Home/index.jsx","components/ChatGUI/index.jsx","components/Auth/RedirectIfLoggedIn.jsx","components/Auth/RequireAuth.jsx","components/App/index.jsx","index.jsx"],"names":["TRYTES_CHARSET_REGEX","SEED_LENGTH","MAX_DEPTH","DEFAULT_INTERVAL","TangleNet","SPAM_NET","URL","MWM","DEV_NET1","DEV_NET2","Routes","Color","generateTrytes","maxLength","seed","window","crypto","getRandomValues","console","error","length","B64ToArrBuff","encode","Uint32Array","replace","substring","getCurrentTimestamp","Math","floor","Date","getTime","getUserHash","username","password","CryptoJS","SHA1","toString","getUserMedia","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","constraints","wrap","_context","prev","next","navigator","mediaDevices","abrupt","Error","stop","_x","apply","this","arguments","extractData","bundle","data","dataJSON","result","JSON","parse","extractJson","err","log","parseJsonFromBundle","LZUTF8","decompress","inputEncoding","prepareData","roomId","compressedData","compress","outputEncoding","compressData","stringify","address","value","message","asciiToTrytes","PasswordTextField","setShowPassword","setPassword","showPassword","react_default","createElement","TextField","variant","margin","required","fullWidth","name","label","type","id","onChange","e","target","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","onClick","prevState","VisibilityOff_default","Visibility_default","PlainTextField","setValue","toLowerCase","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","other","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","key","color","Close_default","useStyles2","CustomizedSnackbars","open","autoHideDuration","Snackbar","anchorOrigin","vertical","horizontal","event","reason","initialState","userHash","loggedIn","myId","tangleNet","iceServers","urls","accountData","monitoringInterval","myAccount","provider","myBalance","DBContext","React","createContext","useStyles","@global","body","common","white","paper","marginTop","flexDirection","avatar","form","width","submit","Login","login","history","db","useContext","_useGlobal","useGlobal","setSeed","slicedToArray","_useGlobal3","setLoggedIn","_useGlobal5","setUsername","_useGlobal7","setMyId","_useState","useState","_useState2","snackbarVariant","setSnackbarVariant","_useState3","_useState4","snackbarMessage","setSnackbarMessage","_useState5","_useState6","snackbarOpen","setSnackbarOpen","_useState7","_useState8","seedInput","setSeedInput","_useState9","_useState10","passwordInput","setPasswordInput","_useState11","_useState12","usernameInput","setUsernameInput","_useState13","_useState14","showPasswordInput","setShowPasswordInput","_useState15","_useState16","loginWithSeed","setLoginWithSeed","userCollection","getCollection","user","findOne","userData","localStorage","setItem","getGlobal","build_default","Container","component","maxWidth","Avatar","LockOutlined_default","Typography","concat","shared_PlainTextField","Fragment","shared_PasswordTextField","Button","Grid","container","item","xs","push","Communication","_this","minWeight","interval","account","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","WEBRTCSIGNAL","REQUEST","DONATE_OFFER","DONATE_ACCEPT","CHAT_MESSAGE","peerList","monitorInterval","oldTransactions","requestList","startMonitoring","constraint","clearInterval","video","audio","stream","sent","currentTimestamp","broadcastRequest","setInterval","monitorRequest","sendDonationOffer","peerId","sendMessage","_callee2","request","_context2","myUsername","broadcastTransaction","iota","prepareTransfers","then","_ref4","_callee3","trytes","_context3","sendTrytes","_callee4","transactions","bundles","signals","_context4","getNewTransactions","getBundles","getSignals","processSignals","t0","_callee5","searchValues","_context5","addresses","findTransactionObjects","filter","transaction","timestamp","bundleMap","bundleList","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","return","map","sort","b","currentIndex","_ref7","startOffering","signal","_assertThisInitialize","assertThisInitialized","config","peer","createPeer","initiator","attachEventHandlers","startAnswering","_assertThisInitialize2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","signalData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref8","Peer","trickle","sendAllSignals","debounce","_ref9","signalQueue","identity","on","emit","objectSpread","_ref10","_callee6","cda","magnetLink","response","CDAdata","timeoutAt","multiUse","expectedAmount","_context6","generateCDA","now","serializeCDAMagnet","send","parseCDAMagnet","sendToCDA","catch","_x2","srcObject","track","destroy","stopStreaming","trackList","getTracks","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","stopMonitoring","endMonitoring","_i","_Object$keys","keys","uuidv4","composeAPI","connected","_i2","_Object$keys2","Events","autoPlay","ref","setPeerVideoRef","height","kind","srcLang","Chatroom","match","params","_useGlobal9","_useGlobal11","setPeers","streams","setStreams","peerCounter","setPeerCounter","communication","setCommunication","setMyBalance","useEffect","createAccount","persistencePath","persistenceAdapter","createPersistenceAdapter","getTotalBalance","balance","_ref3","_ref2","newBalance","_ref5","startAttaching","depth","minWeightMagnitude","delay","maxDepth","toConsumableArray","peerStream","genTryte","marginBottom","seedGen","Signup","setseed","openSnackbar","noValidate","existingUser","existingSeed","isTrytes","insert","justify","addAccountEventHandlers","Account","setRoomId","faucetAddr","setFaucetAddr","getAccountData","res","getAvailableBalance","substr","stopAttaching","removeAllListeners","href","rel","newRoomId","removeItem","setGlobal","style","borderRadius","boxShadow","Spinner","react_epic_spinners_umd_min","size","RedirectIfLoggedIn","Component","withRouter","react_router","to","RequireAuth","App","Helmet","content","charSet","exact","path","Home","ChatGUI","getItem","adapter","LokiIDBAdapter","loki","Loki","autoload","autosave","autosaveInterval","autoloadCallback","addCollection","Iota","MOUNT_NODE","document","getElementById","ReactDOM","render","react_router_dom","CssBaseline","Provider","components_App"],"mappings":"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","file":"static/js/main.e6158e65.chunk.js","sourcesContent":["/**\n * Iota constants\n */\nexport const TRYTES_CHARSET_REGEX = /[^A-Z9]+/g;\nexport const SEED_LENGTH = 81;\nexport const TAG_LENGTH = 27;\nexport const MAX_DEPTH = 4;\nexport const DEFAULT_INTERVAL = 3000;\nexport const ICE_SERVERS = [{\n  urls: 'stun:global.stun.twilio.com:3478?transport=udp',\n}, {\n  urls: 'stun:stun1.l.google.com:19302',\n}, {\n  urls: 'stun:stun2.l.google.com:19302',\n}, {\n  urls: 'stun:stun.l.google.com:19302',\n}, {\n  urls: 'stun:stun.vodafone.ro:3478',\n}, {\n  urls: 'stun:stun.xs4all.nl:3478',\n}];\n\nexport const TangleNet = {\n  SPAM_NET: {\n    URL: 'https://nodes.spamnet.iota.org:443',\n    MWM: 7,\n  },\n  DEV_NET1: {\n    URL: 'https://nodes.devnet.iota.org:443',\n    MWM: 9,\n  },\n  DEV_NET2: {\n    URL: 'https://nodes.devnet.thetangle.org:443',\n    MWM: 9,\n  },\n};\n\nexport const Routes = {\n  HOME: '/',\n  SIGNUP: '/signup',\n  LOGIN: '/login',\n  CHATROOM: '/chatroom/:roomId',\n  CHATGUI: '/chatgui',\n};\n\nexport const Color = {\n  PRIMARY: '#33B3A6',\n  BACKGROUND: '#607D8B',\n};\n","import CryptoJS from 'crypto-js';\nimport B64ToArrBuff from 'base64-arraybuffer';\nimport LZUTF8 from 'lzutf8';\nimport { extractJson } from '@iota/extract-json';\nimport { asciiToTrytes } from '@iota/converter';\nimport { TRYTES_CHARSET_REGEX, SEED_LENGTH } from './constants';\n\nexport function generateTrytes(maxLength) {\n  let seed = '';\n  if (window && window.crypto && window.crypto.getRandomValues) {\n    while (seed.length < maxLength) {\n      seed += B64ToArrBuff\n        .encode(window.crypto.getRandomValues(new Uint32Array(maxLength)))\n        .replace(TRYTES_CHARSET_REGEX, '');\n    }\n  } else {\n    return console.error('No native crypto random available');\n  }\n  return seed.substring(0, maxLength);\n}\n\nfunction compressData(data) {\n  return LZUTF8.compress(data, { outputEncoding: 'Base64' });\n}\n\nfunction decompressData(data) {\n  return LZUTF8.decompress(data, { inputEncoding: 'Base64' });\n}\n\nexport function parseJsonFromBundle(bundle) {\n  let result;\n  try {\n    result = JSON.parse(extractJson(bundle));\n  } catch (err) {\n    console.log(err);\n    console.log(bundle);\n  }\n  return result;\n}\n\nexport const getCurrentTimestamp = () => Math.floor(new Date().getTime() / 1000);\n\nexport const getUserHash = (username, password) => {\n  const hash = CryptoJS.SHA1(username + password);\n  return hash.toString();\n};\n\nexport const getUserMedia = async (constraints) => {\n  if (navigator\n    && navigator.mediaDevices\n    && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  return new Error('User Media Not Supported!');\n};\n\nexport const extractData = (bundle) => {\n  const dataJSON = parseJsonFromBundle(bundle);\n  return JSON.parse(decompressData(dataJSON));\n};\n\nexport const prepareData = (data, roomId) => {\n  const compressedData = compressData(JSON.stringify(data));\n  const message = asciiToTrytes(JSON.stringify(compressedData));\n  return [{\n    address: roomId,\n    // address: generateTrytes(SEED_LENGTH),\n    // tag,\n    value: 0,\n    message,\n  }];\n};\n","import React from 'react';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\nconst PasswordTextField = ({\n  setShowPassword, password, setPassword, showPassword,\n}) => (\n  <TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    name=\"password\"\n    label=\"Password\"\n    type={showPassword ? 'text' : 'password'}\n    id=\"password\"\n    value={password}\n    onChange={e => setPassword(e.target.value)}\n    InputProps={{\n      endAdornment: (\n        <InputAdornment position=\"end\">\n          <IconButton\n            edge=\"end\"\n            aria-label=\"toggle password visibility\"\n            onClick={() => setShowPassword(prevState => !prevState)}\n          >\n            {showPassword ? <VisibilityOff /> : <Visibility />}\n          </IconButton>\n        </InputAdornment>\n      ),\n    }}\n  />\n);\n\nexport default PasswordTextField;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst PlainTextField = ({ setValue, value, label }) => (\n  <TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    label={label}\n    type=\"text\"\n    id={label.toLowerCase()}\n    value={value}\n    onChange={e => setValue(e.target.value)}\n  />\n);\n\nexport default PlainTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const {\n    className, message, onClose, variant, ...other\n  } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={(\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n)}\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedSnackbars({\n  variant, message, open, onClose, autoHideDuration,\n}) {\n  const classes = useStyles2();\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    onClose();\n  }\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={autoHideDuration}\n        onClose={onClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant={variant}\n          message={message}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n","import { TangleNet, ICE_SERVERS } from 'utils/constants';\nimport React from 'react';\n\nexport const initialState = {\n  username: '',\n  userHash: '',\n  loggedIn: false,\n  seed: null,\n  myId: null,\n  tangleNet: TangleNet.DEV_NET1,\n  iceServers: ICE_SERVERS,\n  accountData: null,\n  monitoringInterval: 3000,\n  myAccount: null,\n  provider: TangleNet.DEV_NET1.URL,\n  myBalance: 0,\n};\n\nexport const DBContext = React.createContext();\n","import React, {\n  useGlobal, useState, getGlobal, useEffect, useContext,\n} from 'reactn';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getUserHash } from 'utils';\nimport PasswordTextField from 'components/shared/PasswordTextField';\nimport PlainTextField from 'components/shared/PlainTextField';\nimport Snackbar from 'components/shared/Snackbar';\nimport { DBContext } from 'store';\nimport { Color } from 'utils/constants';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: Color.PRIMARY,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: Color.PRIMARY,\n  },\n}));\n\nexport default function Login({ history }) {\n  const db = useContext(DBContext);\n  let login;\n\n  const [, setSeed] = useGlobal('seed');\n  const [, setLoggedIn] = useGlobal('loggedIn');\n  const [, setUsername] = useGlobal('username');\n  const [, setMyId] = useGlobal('myId');\n\n  const [snackbarVariant, setSnackbarVariant] = useState('info');\n  const [snackbarMessage, setSnackbarMessage] = useState('Info');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  function openSnackbar(message, variant) {\n    setSnackbarMessage(message);\n    setSnackbarVariant(variant);\n    setSnackbarOpen(true);\n  }\n\n  const [seedInput, setSeedInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [showPasswordInput, setShowPasswordInput] = useState(false);\n\n  const [loginWithSeed, setLoginWithSeed] = useState(false);\n\n  if (db) {\n    login = () => {\n      const userCollection = db.getCollection('users');\n      let user = null;\n      let userHash = '';\n      if (loginWithSeed) {\n        user = userCollection.findOne({ seed: seedInput });\n      } else {\n        userHash = getUserHash(usernameInput, passwordInput);\n        user = userCollection.findOne({ userHash });\n      }\n      if (!user) {\n        return openSnackbar('User not found', 'error');\n      }\n      const userData = JSON.stringify(user);\n      localStorage.setItem('userData', userData);\n      setSeed(user.seed);\n      setMyId(user.myId);\n      setUsername(user.username);\n      setLoggedIn(true);\n      return console.log(getGlobal());\n    };\n  }\n\n\n  const signup = () => {\n    history.push('/signup');\n  };\n\n  const toggleLoginWithSeed = () => {\n    setLoginWithSeed(prevState => !prevState);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {`Login with ${(loginWithSeed ? 'seed' : 'username/password')}`}\n        </Typography>\n        <form className={classes.form}>\n          {!loginWithSeed\n            ? (\n              <>\n                <PlainTextField\n                  label=\"Username\"\n                  value={usernameInput}\n                  setValue={setUsernameInput}\n                />\n                <PasswordTextField\n                  setShowPassword={setShowPasswordInput}\n                  password={passwordInput}\n                  setPassword={setPasswordInput}\n                  showPassword={showPasswordInput}\n                />\n              </>\n            )\n            : (\n              <PlainTextField\n                label=\"Seed\"\n                value={seedInput}\n                setValue={setSeedInput}\n              />\n            )}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={login}\n          >\n            Login\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Button type=\"button\" onClick={toggleLoginWithSeed}>\n                {loginWithSeed ? 'Login with name/password' : 'Login with seed'}\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button type=\"button\" onClick={signup}>\n                {'Create an account'}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        variant={snackbarVariant}\n        message={snackbarMessage}\n        open={snackbarOpen}\n        onClose={() => setSnackbarOpen(false)}\n        autoHideDuration={2000}\n      />\n    </Container>\n  );\n}\n","import Events from 'events';\nimport Peer from 'simple-peer';\nimport uuidv4 from 'uuid/v4';\nimport {\n  getCurrentTimestamp,\n  prepareData,\n  extractData,\n  getUserMedia,\n} from 'utils';\nimport { MAX_DEPTH } from 'utils/constants';\nimport { debounce } from 'debounce';\nimport { composeAPI } from '@iota/core';\nimport { serializeCDAMagnet, parseCDAMagnet } from '@iota/cda';\n\n\nexport default class Communication extends Events {\n  constructor({\n    seed, username, myId, roomId, minWeight, iceServers, interval, provider, account,\n  }) {\n    super();\n    this.seed = seed;\n    this.myUsername = username;\n    this.myId = uuidv4();\n    // this.myId = myId;\n    this.roomId = roomId;\n    this.minWeight = minWeight;\n    this.interval = interval;\n    this.config = { iceServers };\n    this.iota = composeAPI({ provider });\n    this.account = account;\n  }\n\n  type = {\n    WEBRTCSIGNAL: 'WEBRTCSIGNAL',\n    REQUEST: 'REQUEST',\n    DONATE_OFFER: 'DONATE_OFFER',\n    DONATE_ACCEPT: 'DONATE_ACCEPT',\n    CHAT_MESSAGE: 'CHAT_MESSAGE',\n  }\n  peerList = {};\n  monitorInterval = null;\n  oldTransactions = {};\n  requestList = {};\n\n  startMonitoring = async () => {\n    clearInterval(this.monitorInterval);\n    const constraint = { video: true, audio: true };\n    this.stream = await getUserMedia(constraint);\n    this.currentTimestamp = getCurrentTimestamp();\n    try {\n      this.broadcastRequest();\n      this.monitorInterval = setInterval(this.monitorRequest, this.interval);\n    } catch (err) {\n      clearInterval(this.monitorInterval);\n      console.error(err);\n    }\n  }\n\n  sendMessage(peerId, message) {\n    const peer = this.peerList[peerId];\n    if (peer && peer.connected) {\n      peer.send(message);\n    }\n  }\n\n  sendDonationOffer = (peerId) => {\n    console.log('commu send donation');\n    const message = {\n      type: this.type.DONATE_OFFER,\n    };\n    this.sendMessage(peerId, JSON.stringify(message));\n  }\n\n  broadcastMessage(message) {\n    for (const peerId of Object.keys(this.peerList)) {\n      if (this.peerList[peerId].connected) {\n        this.peerList[peerId].send(message);\n      }\n    }\n  }\n\n  broadcastRequest = async () => {\n    const request = {\n      id: this.myId,\n      username: this.myUsername,\n      type: this.type.REQUEST,\n    };\n    this.broadcastTransaction(request);\n  }\n\n  broadcastTransaction = (data) => {\n    const message = prepareData(data, this.roomId);\n    this.iota.prepareTransfers(this.seed, message).then(async (trytes) => {\n      this.iota.sendTrytes(trytes, MAX_DEPTH, this.minWeight);\n    });\n  }\n\n  monitorRequest = async () => {\n    try {\n      const transactions = await this.getNewTransactions();\n      const bundles = this.getBundles(transactions);\n      const signals = this.getSignals(bundles);\n      console.log('New signals from Tangle:');\n      console.log(signals);\n      this.processSignals(signals);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  getNewTransactions = async () => {\n    const searchValues = { addresses: [this.roomId] };\n    const transactions = await this.iota.findTransactionObjects(searchValues);\n    return transactions.filter((transaction) => {\n      const { timestamp, bundle } = transaction;\n      return timestamp > this.currentTimestamp\n          && !this.oldTransactions[bundle];\n    });\n  }\n\n  getBundles = (transactions) => {\n    const bundleMap = {};\n    const bundleList = [];\n    for (const transaction of transactions) {\n      const { bundle } = transaction;\n      this.oldTransactions[bundle] = true;\n      if (!bundleMap[bundle]) {\n        bundleMap[bundle] = [];\n      }\n      bundleMap[bundle].push(transaction);\n    }\n    for (const key in bundleMap) {\n      bundleList.push(bundleMap[key]);\n    }\n    return bundleList\n      .map(bundle => bundle\n        .sort((a, b) => (a.currentIndex > b.currentIndex ? 1 : -1)));\n  }\n\n  getSignals = bundles => bundles.map(bundle => extractData(bundle))\n    .filter(({ type, id }) => !(type === this.type.REQUEST && id === this.myId))\n\n  startOffering = (signal) => {\n    this.requestList[signal.id] = signal;\n    for (const id in this.requestList) {\n      if (!this.peerList[id]) {\n        const { username } = this.requestList[id];\n        const { stream, config } = this;\n        const peer = this.createPeer({\n          initiator: true,\n          stream,\n          id,\n          config,\n        });\n        this.attachEventHandlers(peer, id, username);\n      }\n    }\n  }\n\n  startAnswering = (id, peerId, username, data) => {\n    if (id === this.myId) {\n      if (!this.peerList[peerId]) {\n        console.log('started connector');\n        const { config, stream } = this;\n        const peer = this.createPeer({\n          initiator: false,\n          stream,\n          id: peerId,\n          config,\n        });\n        this.attachEventHandlers(peer, peerId, username);\n      }\n      for (const signalData of data) {\n        this.peerList[peerId].signal(signalData);\n      }\n    }\n  }\n\n  processSignals = (signals) => {\n    for (const signal of signals) {\n      const {\n        type, id, peerId, username, data,\n      } = signal;\n      switch (type) {\n        case this.type.REQUEST:\n          this.startOffering(signal);\n          break;\n        case this.type.WEBRTCSIGNAL:\n          this.startAnswering(id, peerId, username, data);\n          break;\n        default:\n          console.log('Unknown signal type');\n      }\n    }\n  }\n\n  createPeer = ({\n    initiator, stream, id, config,\n  }) => {\n    const peer = new Peer({\n      initiator,\n      stream,\n      config,\n      trickle: true,\n    });\n    return this.peerList[id] = peer;\n  }\n\n  attachEventHandlers = (peer, id, username) => {\n    const sendAllSignals = debounce(({ signalData, signalQueue }) => {\n      this.broadcastTransaction(signalData);\n      signalQueue.length = 0;\n    }, 1000);\n\n    const identity = { id, username };\n    const signalQueue = [];\n\n    peer.on('signal', (data) => {\n      signalQueue.push(data);\n      const signalData = {\n        id,\n        username: this.myUsername,\n        type: this.type.WEBRTCSIGNAL,\n        peerId: this.myId,\n        data: [...signalQueue],\n      };\n\n      sendAllSignals({ signalData, signalQueue });\n      this.emit('signal', { ...identity, signalQueue });\n    });\n\n    peer.on('data', async (data) => {\n      let message = data.toString();\n      message = JSON.parse(message);\n      switch (message.type) {\n        case this.type.CHAT_MESSAGE: {\n          this.emit('chatmessage', { ...identity, message });\n          break;\n        }\n        case this.type.DONATE_OFFER: {\n          const cda = await this.account.generateCDA({\n            timeoutAt: Date.now() + 24 * 60 * 60 * 1000,\n            expectedAmount: 1,\n          });\n          const magnetLink = serializeCDAMagnet(cda);\n          const response = {\n            type: this.type.DONATE_ACCEPT,\n            data: magnetLink,\n          };\n          peer.send(JSON.stringify(response));\n          break;\n        }\n        case this.type.DONATE_ACCEPT: {\n          const CDAdata = parseCDAMagnet(message.data);\n          const {\n            address, timeoutAt, multiUse, expectedAmount,\n          } = CDAdata;\n          this.account.sendToCDA({\n            address,\n            timeoutAt,\n            multiUse,\n            expectedAmount,\n            value: 1,\n          })\n            .then((trytes) => {\n              console.log('Successfully prepared the transaction:', trytes);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n          break;\n        }\n        default:\n      }\n      this.emit('data', { ...identity, data: data.toString() });\n    });\n\n    peer.on('stream', (stream) => {\n      console.log('stream');\n      console.log(identity);\n      this.emit('stream', { ...identity, srcObject: stream });\n    });\n\n    peer.on('track', (track, stream) => {\n      this.emit('track', { ...identity, track, stream });\n    });\n\n    peer.on('connect', () => {\n      this.emit('connect', identity);\n    });\n\n    peer.on('close', () => {\n      console.log('closed');\n      this.emit('close', identity);\n      peer.destroy();\n      delete this.peerList[id];\n      delete this.requestList[id];\n    });\n\n    peer.on('error', (error) => {\n      // this.emit('error', { ...identity, error });\n      console.log(error);\n    });\n  }\n\n  stopStreaming = () => {\n    const trackList = this.stream.getTracks();\n    for (const track of trackList) {\n      track.stop();\n    }\n  }\n\n  stopMonitoring = () => {\n    clearInterval(this.monitorInterval);\n  }\n\n  endMonitoring = () => {\n    this.stopStreaming();\n    clearInterval(this.monitorInterval);\n    for (const id of Object.keys(this.peerList)) {\n      this.peerList[id].destroy();\n    }\n    this.peerList = {};\n    this.requestList = {};\n  }\n}\n","import React from 'react';\n\nexport default function Peer(props) {\n  const {\n    username, id, srcObject, sendDonationOffer,\n  } = props;\n\n  const setPeerVideoRef = (ref) => {\n    if (ref) {\n      try {\n        ref.srcObject = srcObject;\n      } catch (err) {\n        console.log('error');\n      }\n    }\n  };\n\n  return (\n    <div className=\"peer\">\n      <video\n        className=\"peer__video\"\n        autoPlay\n        ref={ref => setPeerVideoRef(ref)}\n        width={300}\n        height={300}\n      >\n        <track kind=\"captions\" srcLang=\"en\" label={username} />\n      </video>\n      <div className=\"peer__username\">{`User: ${username}`}</div>\n      <button\n        type=\"button\"\n        className=\"peer__donate\"\n        onClick={sendDonationOffer}\n      >\n        Send 1 iota token\n      </button>\n    </div>\n  );\n}\n","import React, {\n  useEffect, useGlobal, useState,\n} from 'reactn';\nimport { generateTrytes, getUserMedia } from 'utils';\nimport { DEFAULT_INTERVAL } from 'utils/constants';\nimport { createAccount } from '@iota/account';\nimport { createPersistenceAdapter } from '@iota/persistence-adapter-level';\nimport { debounce } from 'debounce';\nimport Communication from './Communication';\nimport Peer from './Peer';\n\nwindow.genTryte = generateTrytes;\n\nexport default function Chatroom({ match: { params: { roomId } }, history }) {\n  const [username] = useGlobal('username');\n  const [myId] = useGlobal('myId');\n  const [tangleNet] = useGlobal('tangleNet');\n  const [iceServers] = useGlobal('iceServers');\n  const [seed] = useGlobal('seed');\n  const [myAccount] = useGlobal('myAccount');\n  const [peers, setPeers] = useState([]);\n  const [streams, setStreams] = useState([]);\n  const [peerCounter, setPeerCounter] = useState(0);\n  const [communication, setCommunication] = useState(null);\n  const [myBalance, setMyBalance] = useState('myBalance');\n\n  const config = {\n    username,\n    seed,\n    myId,\n    roomId,\n    minWeight: tangleNet.MWM,\n    iceServers,\n    interval: DEFAULT_INTERVAL,\n    provider: tangleNet.URL,\n    account: myAccount,\n  };\n\n  const returnHome = () => history.push('/');\n\n  const broadcastMessage = () => communication.broadcastMessage(' A NEW MESSAGE');\n\n  const sentDonationOffer = (id) => {\n    console.log(myAccount);\n    console.log('chatroom send donation');\n    communication.sendDonationOffer(id);\n  };\n\n  const stopMonitoring = () => communication.stopMonitoring();\n\n  const endMonitoring = () => communication.endMonitoring();\n\n  const startMonitoring = () => communication.startMonitoring();\n\n  useEffect(() => {\n    const account = createAccount({\n      seed,\n      provider: tangleNet.URL,\n      persistencePath: `${username}`,\n      persistenceAdapter: createPersistenceAdapter,\n    });\n    account.getTotalBalance().then(balance => setMyBalance(balance));\n\n    account.on('includedDeposit', debounce(async ({ address, bundle }) => {\n      console.log('Incoming payment confirmed');\n      const newBalance = await account.getTotalBalance();\n      setMyBalance(newBalance);\n    }), 1000);\n\n    account.on('includedWithdrawal', debounce(async ({ address, bundle }) => {\n      console.log('Outgoing payment confirmed');\n      const newBalance = await account.getTotalBalance();\n      setMyBalance(newBalance);\n    }), 1000);\n\n    account.startAttaching({\n      depth: 3,\n      minWeightMagnitude: 9,\n      delay: 5000,\n      maxDepth: 6,\n    });\n\n    /* eslint-disable-next-line no-shadow */\n    const communication = new Communication({ ...config, account });\n    setCommunication(communication);\n\n    communication.startMonitoring();\n\n    communication.on('connect', (peer) => {\n      setPeers(prevState => [...prevState, peer]);\n      setPeerCounter(prevState => prevState + 1);\n    });\n\n    communication.on('stream', (peerStream) => {\n      setStreams(prevState => [...prevState, peerStream]);\n    });\n\n    communication.on('close', (peer) => {\n      setStreams(prevState => prevState.filter(stream => stream.id !== peer.id));\n      setPeerCounter(prevState => prevState - 1);\n    });\n\n    return () => {\n      communication.endMonitoring();\n    };\n  }, []);\n\n  return (\n    <div>\n      <div>{`My Balance: ${myBalance}`}</div>\n      <div>{`Room ID: ${roomId}`}</div>\n      <button type=\"button\" onClick={returnHome}>Return home</button>\n      <button type=\"button\" onClick={stopMonitoring}>Stop monitoring</button>\n      <button type=\"button\" onClick={endMonitoring}>End Peer connection</button>\n      <button type=\"button\" onClick={startMonitoring}>Start Monitoring</button>\n      <div>{peerCounter}</div>\n      {streams.map(stream => (\n        <Peer\n          id={stream.id}\n          key={stream.id}\n          username={stream.username}\n          srcObject={stream.srcObject}\n          sendDonationOffer={() => sentDonationOffer(stream.id)}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useContext } from 'reactn';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport PasswordTextField from 'components/shared/PasswordTextField';\nimport PlainTextField from 'components/shared/PlainTextField';\nimport { isTrytes } from '@iota/validators';\nimport Snackbar from 'components/shared/Snackbar';\nimport { getUserHash, generateTrytes } from 'utils';\nimport { DBContext } from 'store';\nimport { Color, SEED_LENGTH } from 'utils/constants';\nimport uuidv4 from 'uuid/v4';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: Color.PRIMARY,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: Color.PRIMARY,\n  },\n  seedGen: {\n    margin: theme.spacing(2, 0, 0),\n  },\n}));\n\nexport default function Signup({ history }) {\n  const db = useContext(DBContext);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [seed, setseed] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [snackbarVariant, setSnackbarVariant] = useState('info');\n  const [snackbarMessage, setSnackbarMessage] = useState('Info');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  function openSnackbar(message, variant) {\n    setSnackbarMessage(message);\n    setSnackbarVariant(variant);\n    setSnackbarOpen(true);\n  }\n\n  function generateSeed() {\n    setseed(generateTrytes(SEED_LENGTH));\n  }\n\n  const classes = useStyles();\n\n  function login() {\n    history.push('/login');\n  }\n\n  function signup() {\n    const userCollection = db.getCollection('users');\n    const existingUser = userCollection.findOne({ username });\n    const existingSeed = userCollection.findOne({ seed });\n    if (!username || !seed || !password) {\n      return openSnackbar('Please enter all required field', 'error');\n    }\n    if (existingUser) {\n      return openSnackbar('Username existed', 'error');\n    }\n    if (existingSeed) {\n      return openSnackbar('Account for seed existed', 'error');\n    }\n    if (!isTrytes(seed, SEED_LENGTH)) {\n      return openSnackbar('Invalid Seed', 'error');\n    }\n    const userHash = getUserHash(username, password);\n    const myId = uuidv4();\n    userCollection.insert({\n      username,\n      userHash,\n      seed,\n      myId,\n    });\n\n    openSnackbar('Account created', 'success');\n    history.push('/login');\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <PlainTextField\n            label=\"Username\"\n            value={username}\n            setValue={setUsername}\n          />\n          <PasswordTextField\n            setShowPassword={setShowPassword}\n            password={password}\n            setPassword={setPassword}\n            showPassword={showPassword}\n          />\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.seedGen}\n            onClick={generateSeed}\n          >\n            Generate Seed\n          </Button>\n\n          <PlainTextField\n            label=\"Seed\"\n            value={seed}\n            setValue={setseed}\n          />\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={signup}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={login}>\n                Already have an account? Log in\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        variant={snackbarVariant}\n        message={snackbarMessage}\n        open={snackbarOpen}\n        onClose={() => setSnackbarOpen(false)}\n        autoHideDuration={2000}\n      />\n    </Container>\n  );\n}\n","import React, {\n  useGlobal, useEffect, getGlobal, setGlobal, useState,\n} from 'reactn';\nimport { TAG_LENGTH } from 'utils/constants';\nimport { generateTrytes } from 'utils';\nimport { initialState } from 'store';\nimport { isTrytes } from '@iota/validators';\nimport { createAccount } from '@iota/account';\nimport { createPersistenceAdapter } from '@iota/persistence-adapter-level';\nimport { composeAPI } from '@iota/core';\nimport { debounce } from 'debounce';\n\nconst addAccountEventHandlers = () => {};\n\nexport default function Account({ history }) {\n  const [seed] = useGlobal('seed');\n  const [provider] = useGlobal('provider');\n  const [username] = useGlobal('username');\n  // const [myAccount, setMyAccount] = useGlobal('myAccount');\n  const [, setLoggedIn] = useGlobal('loggedIn');\n  const [roomId, setRoomId] = useState('');\n  const [myBalance, setMyBalance] = useState('myBalance');\n  const [faucetAddr, setFaucetAddr] = useState('faucetAddr');\n\n  useEffect(() => {\n    const iota = composeAPI({\n      provider,\n    });\n    iota.getAccountData(seed).then(res => console.log(res));\n    const account = createAccount({\n      seed,\n      provider,\n      persistencePath: `${username}`,\n      persistenceAdapter: createPersistenceAdapter,\n    });\n    account.getAvailableBalance().then(balance => setMyBalance(balance));\n    account.startAttaching({\n      depth: 3,\n      minWeightMagnitude: 9,\n      delay: 5000,\n      maxDepth: 6,\n    });\n\n    account.on('includedDeposit', debounce(async ({ address, bundle }) => {\n      console.log('Incoming payment confirmed');\n      const newBalance = await account.getTotalBalance();\n      setMyBalance(newBalance);\n    }), 1000);\n\n    account.on('includedWithdrawal', debounce(async ({ address, bundle }) => {\n      console.log('Outgoing payment confirmed');\n      const newBalance = await account.getTotalBalance();\n      setMyBalance(newBalance);\n    }), 1000);\n\n    account.generateCDA({\n      timeoutAt: Date.now() + 24 * 60 * 60 * 1000,\n    }).then(res => setFaucetAddr(res.address.substr(0, 81)));\n\n    addAccountEventHandlers(account);\n    return () => {\n      account.stopAttaching();\n      account.removeAllListeners();\n    };\n  }, []);\n\n  function logout() {\n    localStorage.removeItem('userData');\n    setLoggedIn(false);\n    setGlobal(initialState);\n    console.log(getGlobal());\n  }\n\n  function createChatroom() {\n    const newRoomId = generateTrytes(81);\n    history.push(`chatroom/${newRoomId}`);\n  }\n\n  function joinChatroom() {\n    if (isTrytes(roomId, 81)) {\n      history.push(`chatroom/${roomId}`);\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        {`My seed: ${seed}`}\n      </div>\n      <div>\n        {`My balance: ${myBalance}`}\n      </div>\n      <div>\n        {`Use this address to request for devnet tokens: ${faucetAddr}`}\n      </div>\n      <div>\n        <a\n          target=\"_blank\"\n          href=\"https://faucet.devnet.iota.org\"\n          rel=\"noopener noreferrer\"\n        >\n      Open devnet faucet link in new tab\n        </a>\n      </div>\n      <button type=\"button\" onClick={createChatroom}>\n        Create chatroom\n      </button>\n      <button type=\"button\" onClick={joinChatroom}>\n        Join chatroom\n      </button>\n      <input type=\"text\" onChange={e => setRoomId(e.target.value)} value={roomId} />\n      <button type=\"button\" onClick={logout}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { TrinityRingsSpinner } from 'react-epic-spinners';\n\nconst style = {\n  backgroundColor: '#607D8B',\n  borderRadius: '12%',\n  height: '250px',\n  width: '250px',\n  boxShadow: '2px 2px 10px 0px rgba(0,0,0,0.59)',\n};\n\nconst Spinner = () => (\n  <TrinityRingsSpinner color=\"#33B3A6\" size={125} style={style} />\n);\n\nexport default Spinner;\n","import React, { useGlobal } from 'reactn';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { Routes } from 'utils/constants';\n\nconst RedirectIfLoggedIn = Component => withRouter((props) => {\n  /* eslint-disable-next-line */\n  const [ loggedIn ] = useGlobal('loggedIn');\n  if (loggedIn) {\n    return (<Redirect to={Routes.HOME} />);\n  }\n  return (<Component {...props} />);\n});\n\nexport default RedirectIfLoggedIn;\n","import React, { useGlobal } from 'reactn';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { Routes } from 'utils/constants';\n\nconst RequireAuth = Component => withRouter((props) => {\n  /* eslint-disable-next-line */\n  const [ loggedIn ] = useGlobal('loggedIn');\n  if (loggedIn) {\n    return (<Component {...props} />);\n  }\n  return (<Redirect to={Routes.LOGIN} />);\n});\n\nexport default RequireAuth;\n","import React, { useGlobal, useEffect, useContext } from 'reactn';\nimport { Helmet } from 'react-helmet';\nimport {\n  Route, Switch, Redirect,\n} from 'react-router-dom';\nimport Login from 'components/Login';\nimport Chatroom from 'components/Chatroom';\nimport Signup from 'components/Signup';\nimport Home from 'components/Home';\nimport ChatGUI from 'components/ChatGUI';\nimport RedirectIfLoggedIn from 'components/Auth/RedirectIfLoggedIn';\nimport RequireAuth from 'components/Auth/RequireAuth';\nimport { Routes } from 'utils/constants';\n\nconst App = () => (\n  <>\n    <Helmet>\n      <title>IOTA - WebRTC</title>\n      <meta name=\"description\" content=\"A decentralized chat and video call application\" />\n      <meta charSet=\"utf-8\" />\n    </Helmet>\n    <Switch>\n      <Route exact path={Routes.HOME} component={RequireAuth(Home)} />\n      <Route exact path={Routes.LOGIN} component={RedirectIfLoggedIn(Login)} />\n      <Route exact path={Routes.SIGNUP} component={RedirectIfLoggedIn(Signup)} />\n      <Route exact path={Routes.CHATROOM} component={RequireAuth(Chatroom)} />\n      <Route exact path={Routes.CHATGUI} component={ChatGUI} />\n      <Redirect to={Routes.HOME} />\n    </Switch>\n  </>\n);\n\nexport default App;\n","import React, { setGlobal, getGlobal } from 'reactn';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from 'components/App';\nimport Loki from 'lokijs';\nimport LokiIDBAdapter from 'lokijs/src/loki-indexed-adapter';\nimport * as Iota from '@iota/core';\nimport { initialState, DBContext } from './store';\n\n\nconst userData = localStorage.getItem('userData');\nif (userData) {\n  try {\n    const user = JSON.parse(userData);\n    setGlobal({ ...initialState, ...user, loggedIn: true });\n    console.log(getGlobal());\n  } catch (err) {\n    localStorage.removeItem('userData');\n    setGlobal(initialState);\n  }\n} else {\n  setGlobal(initialState);\n}\n\nconst adapter = new LokiIDBAdapter();\n\nconst autoloadCallback = () => {\n  console.log('Database loaded');\n  const userCollection = loki.getCollection('users');\n  if (!userCollection) {\n    loki.addCollection('users');\n  }\n};\n\nconst loki = new Loki('test.db', {\n  adapter,\n  autoload: true,\n  autosave: true,\n  autosaveInterval: 4000,\n  /* eslint-disable-next-line */\n  autoloadCallback,\n});\n\n\n/* debugging */\nwindow.iota = Iota;\n\n\nconst MOUNT_NODE = document.getElementById('root');\n\nconst render = () => {\n  console.log('render called');\n  ReactDOM.render(\n    <Router>\n      <CssBaseline />\n      <DBContext.Provider value={loki}>\n        <App />\n      </DBContext.Provider>\n    </Router>,\n    MOUNT_NODE,\n  );\n};\n\nrender();\n"],"sourceRoot":""}