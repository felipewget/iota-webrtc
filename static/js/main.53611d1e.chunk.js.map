{"version":3,"sources":["utils/constants.js","utils/index.js","components/shared/PasswordTextField.jsx","components/shared/PlainTextField.jsx","components/shared/Snackbar.jsx","store.js","components/Login/index.jsx","components/Chatroom/Communication.js","components/Chatroom/index.jsx","components/Signup/index.jsx","components/Home/index.jsx","components/ChatGUI/index.jsx","components/Auth/RedirectIfLoggedIn.jsx","components/Auth/RequireAuth.jsx","components/App/index.jsx","index.jsx"],"names":["TRYTES_CHARSET_REGEX","SEED_LENGTH","TAG_LENGTH","MAX_DEPTH","DEFAULT_INTERVAL","TangleNet","SPAM_NET","URL","MWM","DEV_NET1","DEV_NET2","Routes","Color","generateTrytes","maxLength","seed","window","Uint32Array","crypto","getRandomValues","console","error","length","B64ToArrBuff","encode","replace","substring","getCurrentTimestamp","Math","floor","Date","getTime","getUserHash","username","password","CryptoJS","SHA1","toString","getUserMedia","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","constraints","wrap","_context","prev","next","navigator","mediaDevices","abrupt","Error","stop","_x","apply","this","arguments","extractData","bundle","data","dataJSON","result","JSON","parse","extractJson","err","log","parseJsonFromBundle","decompressedData","LZUTF8","decompress","inputEncoding","prepareData","tag","compressedData","compress","outputEncoding","compressData","stringify","message","asciiToTrytes","address","value","PasswordTextField","setShowPassword","setPassword","showPassword","react_default","createElement","TextField","variant","margin","required","fullWidth","name","label","type","id","onChange","e","target","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","onClick","prevState","VisibilityOff_default","Visibility_default","PlainTextField","setValue","toLowerCase","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","other","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","key","color","Close_default","useStyles2","CustomizedSnackbars","open","autoHideDuration","Snackbar","anchorOrigin","vertical","horizontal","event","reason","initialState","userHash","loggedIn","myId","tangleNet","iceServers","urls","accountData","monitoringInterval","DBContext","React","createContext","useStyles","@global","body","common","white","paper","marginTop","flexDirection","avatar","form","width","submit","Login","login","history","db","useContext","_useGlobal","useGlobal","setSeed","slicedToArray","_useGlobal3","setLoggedIn","_useGlobal5","setUsername","_useGlobal7","setMyId","_useState","useState","_useState2","snackbarVariant","setSnackbarVariant","_useState3","_useState4","snackbarMessage","setSnackbarMessage","_useState5","_useState6","snackbarOpen","setSnackbarOpen","_useState7","_useState8","seedInput","setSeedInput","_useState9","_useState10","passwordInput","setPasswordInput","_useState11","_useState12","usernameInput","setUsernameInput","_useState13","_useState14","showPasswordInput","setShowPasswordInput","_useState15","_useState16","loginWithSeed","setLoginWithSeed","userCollection","getCollection","user","findOne","userData","localStorage","setItem","getGlobal","build_default","Container","component","maxWidth","Avatar","LockOutlined_default","Typography","concat","shared_PlainTextField","Fragment","shared_PasswordTextField","Button","Grid","container","item","xs","push","Communication","_this","roomId","minWeight","interval","provider","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","peerList","monitorInterval","currentTimestamp","stream","checkedBundles","requestList","startMonitoring","_ref2","broadcastRequest","setInterval","monitorRequest","clearInterval","request","myUsername","Type","REQUEST","broadcastTransaction","iota","prepareTransfers","then","_ref4","_callee2","trytes","_context2","sendTrytes","_callee3","transactions","bundles","signals","_context3","getTransactions","sent","getBundles","getSignals","handleSignals","t0","_callee4","searchValues","_context4","tags","findTransactionObjects","filterNewTransactions","filter","transaction","timestamp","newTransactions","extractBundles","map","_ref7","handleRequests","_assertThisInitialize","assertThisInitialized","config","peer","createPeer","initiator","attachEventHandlers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","signal","peerId","SIGNAL","_assertThisInitialize2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","signalData","return","bundleMap","bundleList","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","sort","b","currentIndex","_ref8","Peer","trickle","sendAllSignals","debounce","_ref9","signalQueue","setTimeout","identity","on","emit","objectSpread","destroyPeer","stopMonitoring","uuidv4","composeAPI","_i","_Object$keys","keys","connected","send","destroy","_i2","_Object$keys2","Events","Chatroom","match","params","_useGlobal9","setPeers","streams","setStreams","peerCounter","setPeerCounter","communication","setCommunication","peerVideoRefs","useRef","useEffect","constraint","video","audio","toConsumableArray","peerStream","startVideoCall","sendMessageToAll","endPeerConnection","autoPlay","style","height","ref","srcObject","setPeerVideoRefs","kind","srcLang","genTryte","marginBottom","seedGen","Signup","setseed","openSnackbar","noValidate","existingUser","existingSeed","isTrytes","insert","justify","Account","_useGlobal4","setAccountData","setRoomId","getAccountData","res","newRoomId","removeItem","setGlobal","borderRadius","boxShadow","Spinner","react_epic_spinners_umd_min","size","RedirectIfLoggedIn","Component","withRouter","react_router","to","RequireAuth","App","Helmet","content","charSet","exact","path","Home","ChatGUI","getItem","adapter","LokiIDBAdapter","loki","Loki","autoload","autosave","autosaveInterval","autoloadCallback","addCollection","MOUNT_NODE","document","getElementById","ReactDOM","render","react_router_dom","CssBaseline","Provider","components_App"],"mappings":"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","file":"static/js/main.53611d1e.chunk.js","sourcesContent":["/**\n * Iota constants\n */\nexport const TRYTES_CHARSET_REGEX = /[^A-Z9]+/g;\nexport const SEED_LENGTH = 81;\nexport const TAG_LENGTH = 27;\nexport const MAX_DEPTH = 4;\nexport const DEFAULT_INTERVAL = 3000;\nexport const ICE_SERVERS = [{\n  urls: 'stun:global.stun.twilio.com:3478?transport=udp',\n}, {\n  urls: 'stun:stun1.l.google.com:19302',\n}, {\n  urls: 'stun:stun2.l.google.com:19302',\n}, {\n  urls: 'stun:stun.l.google.com:19302',\n}, {\n  urls: 'stun:stun.vodafone.ro:3478',\n}, {\n  urls: 'stun:stun.xs4all.nl:3478',\n}];\n\nexport const TangleNet = {\n  SPAM_NET: {\n    URL: 'https://nodes.spamnet.iota.org:443',\n    MWM: 7,\n  },\n  DEV_NET1: {\n    URL: 'https://nodes.devnet.iota.org:443',\n    MWM: 9,\n  },\n  DEV_NET2: {\n    URL: 'https://nodes.devnet.thetangle.org:443',\n    MWM: 9,\n  },\n};\n\nexport const Routes = {\n  HOME: '/',\n  SIGNUP: '/signup',\n  LOGIN: '/login',\n  CHATROOM: '/chatroom/:roomId',\n  CHATGUI: '/chatgui',\n};\n\nexport const Color = {\n  PRIMARY: '#33B3A6',\n  BACKGROUND: '#607D8B',\n};\n","import CryptoJS from 'crypto-js';\nimport B64ToArrBuff from 'base64-arraybuffer';\nimport LZUTF8 from 'lzutf8';\nimport { extractJson } from '@iota/extract-json';\nimport { asciiToTrytes } from '@iota/converter';\nimport { TRYTES_CHARSET_REGEX, SEED_LENGTH } from './constants';\n\nexport function generateTrytes(maxLength) {\n  let seed = '';\n  if (window && Uint32Array && window.crypto && window.crypto.getRandomValues) {\n    while (seed.length < maxLength) {\n      seed += B64ToArrBuff\n        .encode(window.crypto.getRandomValues(new Uint32Array(SEED_LENGTH)))\n        .replace(TRYTES_CHARSET_REGEX, '');\n    }\n  } else {\n    return console.error('No native crypto random available');\n  }\n  return seed.substring(0, maxLength);\n}\n\nfunction compressData(data) {\n  return LZUTF8.compress(data, { outputEncoding: 'Base64' });\n}\n\nfunction decompressData(data) {\n  return LZUTF8.decompress(data, { inputEncoding: 'Base64' });\n}\n\nexport function parseJsonFromBundle(bundle) {\n  let result;\n  try {\n    result = JSON.parse(extractJson(bundle));\n  } catch (err) {\n    console.log(err);\n    console.log(bundle);\n  }\n  return result;\n}\n\nexport const getCurrentTimestamp = () => Math.floor(new Date().getTime() / 1000);\n\nexport const getUserHash = (username, password) => {\n  const hash = CryptoJS.SHA1(username + password);\n  return hash.toString();\n};\n\nexport const getUserMedia = async (constraints) => {\n  if (navigator\n    && navigator.mediaDevices\n    && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  return new Error('User Media Not Supported!');\n};\n\nexport const extractData = (bundle) => {\n  const dataJSON = parseJsonFromBundle(bundle);\n  const decompressedData = decompressData(dataJSON);\n  return JSON.parse(decompressedData);\n};\n\nexport const prepareData = (data, tag) => {\n  const dataJSONString = JSON.stringify(data);\n  const compressedData = compressData(dataJSONString);\n  const message = asciiToTrytes(JSON.stringify(compressedData));\n  return [{\n    address: generateTrytes(SEED_LENGTH),\n    tag,\n    value: 0,\n    message,\n  }];\n};\n","import React from 'react';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\nconst PasswordTextField = ({\n  setShowPassword, password, setPassword, showPassword,\n}) => (\n  <TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    name=\"password\"\n    label=\"Password\"\n    type={showPassword ? 'text' : 'password'}\n    id=\"password\"\n    value={password}\n    onChange={e => setPassword(e.target.value)}\n    InputProps={{\n      endAdornment: (\n        <InputAdornment position=\"end\">\n          <IconButton\n            edge=\"end\"\n            aria-label=\"toggle password visibility\"\n            onClick={() => setShowPassword(prevState => !prevState)}\n          >\n            {showPassword ? <VisibilityOff /> : <Visibility />}\n          </IconButton>\n        </InputAdornment>\n      ),\n    }}\n  />\n);\n\nexport default PasswordTextField;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst PlainTextField = ({ setValue, value, label }) => (\n  <TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    label={label}\n    type=\"text\"\n    id={label.toLowerCase()}\n    value={value}\n    onChange={e => setValue(e.target.value)}\n  />\n);\n\nexport default PlainTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const {\n    className, message, onClose, variant, ...other\n  } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={(\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n)}\n      action={[\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function CustomizedSnackbars({\n  variant, message, open, onClose, autoHideDuration,\n}) {\n  const classes = useStyles2();\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    onClose();\n  }\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={autoHideDuration}\n        onClose={onClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant={variant}\n          message={message}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n","import { TangleNet, ICE_SERVERS } from 'utils/constants';\nimport React from 'react';\n\nexport const initialState = {\n  username: '',\n  userHash: '',\n  loggedIn: false,\n  seed: null,\n  myId: null,\n  tangleNet: TangleNet.DEV_NET1,\n  iceServers: ICE_SERVERS,\n  accountData: null,\n  monitoringInterval: 2000,\n};\n\nexport const DBContext = React.createContext();\n","import React, {\n  useGlobal, useState, getGlobal, useEffect, useContext,\n} from 'reactn';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getUserHash } from 'utils';\nimport PasswordTextField from 'components/shared/PasswordTextField';\nimport PlainTextField from 'components/shared/PlainTextField';\nimport Snackbar from 'components/shared/Snackbar';\nimport { DBContext } from 'store';\nimport { Color } from 'utils/constants';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: Color.PRIMARY,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: Color.PRIMARY,\n  },\n}));\n\nexport default function Login({ history }) {\n  const db = useContext(DBContext);\n  let login;\n\n  const [, setSeed] = useGlobal('seed');\n  const [, setLoggedIn] = useGlobal('loggedIn');\n  const [, setUsername] = useGlobal('username');\n  const [, setMyId] = useGlobal('myId');\n\n  const [snackbarVariant, setSnackbarVariant] = useState('info');\n  const [snackbarMessage, setSnackbarMessage] = useState('Info');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  function openSnackbar(message, variant) {\n    setSnackbarMessage(message);\n    setSnackbarVariant(variant);\n    setSnackbarOpen(true);\n  }\n\n  const [seedInput, setSeedInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [usernameInput, setUsernameInput] = useState('');\n  const [showPasswordInput, setShowPasswordInput] = useState(false);\n\n  const [loginWithSeed, setLoginWithSeed] = useState(false);\n\n  if (db) {\n    login = () => {\n      const userCollection = db.getCollection('users');\n      let user = null;\n      let userHash = '';\n      if (loginWithSeed) {\n        user = userCollection.findOne({ seed: seedInput });\n      } else {\n        userHash = getUserHash(usernameInput, passwordInput);\n        user = userCollection.findOne({ userHash });\n      }\n      if (!user) {\n        return openSnackbar('User not found', 'error');\n      }\n      const userData = JSON.stringify(user);\n      localStorage.setItem('userData', userData);\n      setSeed(user.seed);\n      setMyId(user.myId);\n      setUsername(user.username);\n      setLoggedIn(true);\n      return console.log(getGlobal());\n    };\n  }\n\n\n  const signup = () => {\n    history.push('/signup');\n  };\n\n  const toggleLoginWithSeed = () => {\n    setLoginWithSeed(prevState => !prevState);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {`Login with ${(loginWithSeed ? 'seed' : 'username/password')}`}\n        </Typography>\n        <form className={classes.form}>\n          {!loginWithSeed\n            ? (\n              <>\n                <PlainTextField\n                  label=\"Username\"\n                  value={usernameInput}\n                  setValue={setUsernameInput}\n                />\n                <PasswordTextField\n                  setShowPassword={setShowPasswordInput}\n                  password={passwordInput}\n                  setPassword={setPasswordInput}\n                  showPassword={showPasswordInput}\n                />\n              </>\n            )\n            : (\n              <PlainTextField\n                label=\"Seed\"\n                value={seedInput}\n                setValue={setSeedInput}\n              />\n            )}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={login}\n          >\n            Login\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Button type=\"button\" onClick={toggleLoginWithSeed}>\n                {loginWithSeed ? 'Login with name/password' : 'Login with seed'}\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button type=\"button\" onClick={signup}>\n                {'Create an account'}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        variant={snackbarVariant}\n        message={snackbarMessage}\n        open={snackbarOpen}\n        onClose={() => setSnackbarOpen(false)}\n        autoHideDuration={2000}\n      />\n    </Container>\n  );\n}\n","import Events from 'events';\nimport Peer from 'simple-peer';\nimport uuidv4 from 'uuid/v4';\nimport {\n  getCurrentTimestamp,\n  prepareData,\n  extractData,\n} from 'utils';\nimport { MAX_DEPTH } from 'utils/constants';\nimport { debounce } from 'debounce';\nimport { composeAPI } from '@iota/core';\n\n\nexport default class Communication extends Events {\n  constructor({\n    seed, username, myId, roomId, minWeight, iceServers, interval, provider,\n  }) {\n    super();\n    this.seed = seed;\n    this.myUsername = username;\n    this.myId = uuidv4();\n    // this.myId = myId;\n    this.roomId = roomId;\n    this.minWeight = minWeight;\n    this.interval = interval;\n    this.config = { iceServers };\n    this.iota = composeAPI({ provider });\n  }\n\n  static Type = {\n    SIGNAL: 'SIGNAL',\n    REQUEST: 'REQUEST',\n  }\n  peerList = {};\n  monitorInterval = null;\n  currentTimestamp = getCurrentTimestamp();\n  stream = null;\n  checkedBundles = {};\n  requestList = {};\n\n  startMonitoring = ({ stream }) => {\n    this.stream = stream;\n    try {\n      this.broadcastRequest();\n      this.monitorInterval = setInterval(this.monitorRequest, this.interval);\n    } catch (err) {\n      clearInterval(this.monitorInterval);\n      console.error(err);\n    }\n  }\n\n  broadcastRequest = async () => {\n    const request = {\n      id: this.myId,\n      username: this.myUsername,\n      type: Communication.Type.REQUEST,\n    };\n    this.broadcastTransaction(request);\n  }\n\n  broadcastTransaction = (data) => {\n    const message = prepareData(data, this.roomId);\n    this.iota.prepareTransfers(this.seed, message).then(async (trytes) => {\n      this.iota.sendTrytes(trytes, MAX_DEPTH, this.minWeight);\n    });\n  }\n\n  monitorRequest = async () => {\n    try {\n      const transactions = await this.getTransactions();\n      const bundles = this.getBundles(transactions);\n      const signals = this.getSignals(bundles);\n      console.log('Monitoring..., array of new signals:');\n      console.log(signals);\n      this.handleSignals(signals);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  getTransactions = async () => {\n    const searchValues = { tags: [this.roomId] };\n    return this.iota.findTransactionObjects(searchValues);\n  }\n\n  filterNewTransactions = transactions => transactions.filter((transaction) => {\n    const { timestamp, bundle } = transaction;\n    return timestamp > this.currentTimestamp\n        && !this.checkedBundles[bundle];\n  })\n\n  getBundles = (transactions) => {\n    const newTransactions = this.filterNewTransactions(transactions);\n    return this.extractBundles(newTransactions);\n  }\n\n  getSignals = bundles => bundles.map(bundle => extractData(bundle, this.roomId))\n    .filter(({ type, id }) => !(type === Communication.Type.REQUEST && id === this.myId))\n\n  handleRequests = () => {\n    for (const id in this.requestList) {\n      if (!this.peerList[id]) {\n        const { username } = this.requestList[id];\n        const { stream, config } = this;\n        const peer = this.createPeer({\n          initiator: true,\n          stream,\n          id,\n          config,\n        });\n        this.attachEventHandlers(peer, id, username);\n      }\n    }\n  }\n\n  handleSignals = (signals) => {\n    for (const signal of signals) {\n      const {\n        type, id, peerId, username, data,\n      } = signal;\n      if (type === Communication.Type.REQUEST) {\n        this.requestList[signal.id] = signal;\n        this.handleRequests();\n      }\n      if (type === Communication.Type.SIGNAL && id === this.myId) {\n        if (!this.peerList[peerId]) {\n          console.log('started connector');\n          const { config, stream } = this;\n          const peer = this.createPeer({\n            initiator: false,\n            stream,\n            id: peerId,\n            config,\n          });\n          this.attachEventHandlers(peer, peerId, username);\n        }\n        for (const signalData of data) {\n          this.peerList[peerId].signal(signalData);\n        }\n      }\n    }\n  }\n\n  extractBundles = (transactions) => {\n    const bundleMap = {};\n    const bundleList = [];\n    for (const transaction of transactions) {\n      const { bundle } = transaction;\n      this.checkedBundles[bundle] = true;\n      if (!bundleMap[bundle]) {\n        bundleMap[bundle] = [];\n      }\n      bundleMap[bundle].push(transaction);\n    }\n    for (const key in bundleMap) {\n      bundleList.push(bundleMap[key]);\n    }\n    return bundleList\n      .map(bundle => bundle\n        .sort((a, b) => (a.currentIndex > b.currentIndex ? 1 : -1)));\n  }\n\n  broadcastMessage(message) {\n    for (const peerId of Object.keys(this.peerList)) {\n      if (this.peerList[peerId].connected) {\n        this.peerList[peerId].send(message);\n      }\n    }\n  }\n\n  createPeer = ({\n    initiator, stream, id, config,\n  }) => {\n    const peer = new Peer({\n      initiator,\n      stream,\n      config,\n      trickle: false,\n    });\n    return this.peerList[id] = peer;\n  }\n\n  attachEventHandlers = (peer, id, username) => {\n    const sendAllSignals = debounce(({ signalData, signalQueue }) => {\n      setTimeout(() => this.broadcastTransaction(signalData), 0);\n      signalQueue.length = 0;\n    }, 800);\n\n    const identity = { id, username };\n    const signalQueue = [];\n\n    peer.on('signal', (data) => {\n      signalQueue.push(data);\n      const signalData = {\n        id,\n        username,\n        type: Communication.Type.SIGNAL,\n        peerId: this.myId,\n        data: [...signalQueue],\n      };\n\n      sendAllSignals({ signalData, signalQueue });\n      this.emit('signal', { ...identity, signalQueue });\n    });\n\n    peer.on('data', (data) => {\n      this.emit('data', { ...identity, data: data.toString() });\n    });\n\n    peer.on('stream', (stream) => {\n      this.emit('stream', { ...identity, stream });\n    });\n\n    peer.on('connect', () => {\n      this.emit('connect', identity);\n    });\n\n    peer.on('close', () => {\n      this.emit('close', identity);\n      this.destroyPeer(this.id);\n    });\n\n    peer.on('error', (error) => {\n      this.emit('error', { ...identity, error });\n    });\n  }\n\n  destroyPeer(id) {\n    delete this.requestList[id];\n    this.peerList[id].destroy();\n    this.peerList[id] = null;\n  }\n\n  stopMonitoring = () => {\n    clearInterval(this.monitorInterval);\n  }\n\n  endPeerConnection() {\n    this.currentTimestamp = null;\n    clearInterval(this.monitorInterval);\n\n    for (const key of Object.keys(this.peerList)) {\n      this.destroyPeer(key);\n    }\n  }\n}\n","import React, {\n  useEffect, useGlobal, useState, useRef,\n} from 'reactn';\nimport { composeAPI } from '@iota/core';\nimport { generateTrytes, getUserMedia } from 'utils';\nimport { DEFAULT_INTERVAL } from 'utils/constants';\nimport Communication from './Communication';\n\nwindow.genTryte = generateTrytes;\n\nexport default function Chatroom({ match: { params: { roomId } } }) {\n  console.log('Chatroom called');\n  const [username] = useGlobal('username');\n  const [myId] = useGlobal('myId');\n  const [tangleNet] = useGlobal('tangleNet');\n  const [iceServers] = useGlobal('iceServers');\n  const [seed] = useGlobal('seed');\n  const [peers, setPeers] = useState([]);\n  const [streams, setStreams] = useState([]);\n  const [peerCounter, setPeerCounter] = useState(0);\n  const [communication, setCommunication] = useState(null);\n\n  const myVideoRef = useRef();\n  const peerVideoRefs = {};\n\n  const config = {\n    username,\n    seed,\n    myId,\n    roomId,\n    minWeight: tangleNet.MWM,\n    iceServers,\n    interval: DEFAULT_INTERVAL,\n    provider: tangleNet.URL,\n  };\n\n  function sendMessage() {\n    communication.sendMessageToAll('A NEW MESSAGE');\n  }\n\n  function stopMonitoring() {\n    communication.stopMonitoring();\n  }\n\n  function endMonitoring() {\n    communication.endPeerConnection();\n  }\n\n  const setPeerVideoRefs = (ref, id, stream) => {\n    if (ref) {\n      try {\n        peerVideoRefs[id] = ref;\n        ref.srcObject = stream;\n      } catch (err) {\n        console.log('error');\n      }\n    }\n  };\n\n  useEffect(() => {\n    /* eslint-disable-next-line no-shadow */\n    const communication = new Communication(config);\n    setCommunication(communication);\n\n    const startVideoCall = async () => {\n      const constraint = { video: true, audio: true };\n      const stream = await getUserMedia(constraint);\n      communication.startMonitoring({ stream });\n\n      communication.on('connect', (signal) => {\n        setPeers(prevState => [...prevState, signal]);\n        setPeerCounter(prevState => prevState + 1);\n      });\n\n      communication.on('stream', (peerStream) => {\n        setStreams(prevState => [...prevState, peerStream]);\n      });\n    };\n    startVideoCall();\n\n    return () => console.log('unmounted');\n  }, []);\n\n  return (\n    <div>\n      <button type=\"button\" onClick={sendMessage}>Send a message</button>\n      <button type=\"button\" onClick={stopMonitoring}>Stop monitoring</button>\n      <button type=\"button\" onClick={endMonitoring}>End Peer connection</button>\n      <div>{peerCounter}</div>\n      {streams.map(stream => (\n        <div key={stream.id}>\n          <div />\n          <video\n            autoPlay\n            style={{ width: '250px', height: '250px' }}\n            ref={ref => setPeerVideoRefs(ref, stream.id, stream.stream)}\n          >\n            <track kind=\"captions\" srcLang=\"en\" label={stream.username} />\n          </video>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useContext } from 'reactn';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport PasswordTextField from 'components/shared/PasswordTextField';\nimport PlainTextField from 'components/shared/PlainTextField';\nimport { isTrytes } from '@iota/validators';\nimport Snackbar from 'components/shared/Snackbar';\nimport { getUserHash, generateTrytes } from 'utils';\nimport { DBContext } from 'store';\nimport { Color, SEED_LENGTH } from 'utils/constants';\nimport uuidv4 from 'uuid/v4';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: Color.PRIMARY,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: Color.PRIMARY,\n  },\n  seedGen: {\n    margin: theme.spacing(2, 0, 0),\n  },\n}));\n\nexport default function Signup({ history }) {\n  const db = useContext(DBContext);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [seed, setseed] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [snackbarVariant, setSnackbarVariant] = useState('info');\n  const [snackbarMessage, setSnackbarMessage] = useState('Info');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  function openSnackbar(message, variant) {\n    setSnackbarMessage(message);\n    setSnackbarVariant(variant);\n    setSnackbarOpen(true);\n  }\n\n  function generateSeed() {\n    setseed(generateTrytes(SEED_LENGTH));\n  }\n\n  const classes = useStyles();\n\n  function login() {\n    history.push('/login');\n  }\n\n  function signup() {\n    const userCollection = db.getCollection('users');\n    const existingUser = userCollection.findOne({ username });\n    const existingSeed = userCollection.findOne({ seed });\n    if (!username || !seed || !password) {\n      return openSnackbar('Please enter all required field', 'error');\n    }\n    if (existingUser) {\n      return openSnackbar('Username existed', 'error');\n    }\n    if (existingSeed) {\n      return openSnackbar('Account for seed existed', 'error');\n    }\n    if (!isTrytes(seed, SEED_LENGTH)) {\n      return openSnackbar('Invalid Seed', 'error');\n    }\n    const userHash = getUserHash(username, password);\n    const myId = uuidv4();\n    userCollection.insert({\n      username,\n      userHash,\n      seed,\n      myId,\n    });\n\n    openSnackbar('Account created', 'success');\n    history.push('/login');\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <PlainTextField\n            label=\"Username\"\n            value={username}\n            setValue={setUsername}\n          />\n          <PasswordTextField\n            setShowPassword={setShowPassword}\n            password={password}\n            setPassword={setPassword}\n            showPassword={showPassword}\n          />\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.seedGen}\n            onClick={generateSeed}\n          >\n            Generate Seed\n          </Button>\n\n          <PlainTextField\n            label=\"Seed\"\n            value={seed}\n            setValue={setseed}\n          />\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={signup}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={login}>\n                Already have an account? Log in\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Snackbar\n        variant={snackbarVariant}\n        message={snackbarMessage}\n        open={snackbarOpen}\n        onClose={() => setSnackbarOpen(false)}\n        autoHideDuration={2000}\n      />\n    </Container>\n  );\n}\n","import React, {\n  useGlobal, useEffect, getGlobal, setGlobal, useState,\n} from 'reactn';\nimport { composeAPI } from '@iota/core';\nimport { TangleNet, TAG_LENGTH } from 'utils/constants';\nimport { generateTrytes } from 'utils';\nimport { initialState } from 'store';\nimport { isTrytes } from '@iota/validators';\n\nexport default function Account({ history }) {\n  const [seed] = useGlobal('seed');\n  const [accountData, setAccountData] = useGlobal('accountData');\n  const [, setLoggedIn] = useGlobal('loggedIn');\n  const [roomId, setRoomId] = useState('');\n  useEffect(() => {\n    const iota = composeAPI({\n      provider: TangleNet.DEV_NET1.URL,\n    });\n    iota.getAccountData(seed).then((res) => {\n      console.log(res);\n      setAccountData(res);\n    });\n  }, []);\n\n  function logout() {\n    localStorage.removeItem('userData');\n    setLoggedIn(false);\n    setGlobal(initialState);\n    console.log(getGlobal());\n  }\n\n  function createChatroom() {\n    const newRoomId = generateTrytes(TAG_LENGTH);\n    history.push(`chatroom/${newRoomId}`);\n  }\n\n  function joinChatroom() {\n    if (isTrytes(roomId, TAG_LENGTH)) {\n      history.push(`chatroom/${roomId}`);\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        {`Your seed: ${seed}`}\n      </div>\n      <div>\n        {`Your account data: ${accountData}`}\n      </div>\n      <button type=\"button\" onClick={createChatroom}>\n        Create chatroom\n      </button>\n      <button type=\"button\" onClick={joinChatroom}>\n        Join chatroom\n      </button>\n      <input type=\"text\" onChange={e => setRoomId(e.target.value)} value={roomId} />\n      <button type=\"button\" onClick={logout}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { TrinityRingsSpinner } from 'react-epic-spinners';\n\nconst style = {\n  backgroundColor: '#607D8B',\n  borderRadius: '12%',\n  height: '250px',\n  width: '250px',\n  boxShadow: '2px 2px 10px 0px rgba(0,0,0,0.59)',\n};\n\nconst Spinner = () => (\n  <TrinityRingsSpinner color=\"#33B3A6\" size={125} style={style} />\n);\n\nexport default Spinner;\n","import React, { useGlobal } from 'reactn';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { Routes } from 'utils/constants';\n\nconst RedirectIfLoggedIn = Component => withRouter((props) => {\n  /* eslint-disable-next-line */\n  const [ loggedIn ] = useGlobal('loggedIn');\n  if (loggedIn) {\n    return (<Redirect to={Routes.HOME} />);\n  }\n  return (<Component {...props} />);\n});\n\nexport default RedirectIfLoggedIn;\n","import React, { useGlobal } from 'reactn';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { Routes } from 'utils/constants';\n\nconst RequireAuth = Component => withRouter((props) => {\n  /* eslint-disable-next-line */\n  const [ loggedIn ] = useGlobal('loggedIn');\n  if (loggedIn) {\n    return (<Component {...props} />);\n  }\n  return (<Redirect to={Routes.LOGIN} />);\n});\n\nexport default RequireAuth;\n","import React, { useGlobal, useEffect, useContext } from 'reactn';\nimport { Helmet } from 'react-helmet';\nimport {\n  Route, Switch, Redirect,\n} from 'react-router-dom';\nimport Login from 'components/Login';\nimport Chatroom from 'components/Chatroom';\nimport Signup from 'components/Signup';\nimport Home from 'components/Home';\nimport ChatGUI from 'components/ChatGUI';\nimport RedirectIfLoggedIn from 'components/Auth/RedirectIfLoggedIn';\nimport RequireAuth from 'components/Auth/RequireAuth';\nimport { Routes } from 'utils/constants';\n\nconst App = () => (\n  <>\n    <Helmet>\n      <title>IOTA - WebRTC</title>\n      <meta name=\"description\" content=\"A decentralized chat and video call application\" />\n      <meta charSet=\"utf-8\" />\n    </Helmet>\n    <Switch>\n      <Route exact path={Routes.HOME} component={RequireAuth(Home)} />\n      <Route exact path={Routes.LOGIN} component={RedirectIfLoggedIn(Login)} />\n      <Route exact path={Routes.SIGNUP} component={RedirectIfLoggedIn(Signup)} />\n      <Route exact path={Routes.CHATROOM} component={RequireAuth(Chatroom)} />\n      <Route exact path={Routes.CHATGUI} component={ChatGUI} />\n      <Redirect to={Routes.HOME} />\n    </Switch>\n  </>\n);\n\nexport default App;\n","import React, { setGlobal, getGlobal } from 'reactn';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from 'components/App';\nimport Loki from 'lokijs';\nimport LokiIDBAdapter from 'lokijs/src/loki-indexed-adapter';\nimport { initialState, DBContext } from './store';\n\nconst userData = localStorage.getItem('userData');\nif (userData) {\n  try {\n    const user = JSON.parse(userData);\n    setGlobal({ ...initialState, ...user, loggedIn: true });\n    console.log(getGlobal());\n  } catch (err) {\n    localStorage.removeItem('userData');\n    setGlobal(initialState);\n  }\n} else {\n  setGlobal(initialState);\n}\n\nconst adapter = new LokiIDBAdapter();\n\nconst autoloadCallback = () => {\n  console.log('Database loaded');\n  const userCollection = loki.getCollection('users');\n  if (!userCollection) {\n    loki.addCollection('users');\n  }\n};\n\nconst loki = new Loki('test.db', {\n  adapter,\n  autoload: true,\n  autosave: true,\n  autosaveInterval: 4000,\n  /* eslint-disable-next-line */\n  autoloadCallback,\n});\n\nconst MOUNT_NODE = document.getElementById('root');\n\nconst render = () => {\n  console.log('render called');\n  ReactDOM.render(\n    <Router>\n      <CssBaseline />\n      <DBContext.Provider value={loki}>\n        <App />\n      </DBContext.Provider>\n    </Router>,\n    MOUNT_NODE,\n  );\n};\n\nrender();\n"],"sourceRoot":""}